{"version":3,"sources":["API/UserBranch.js","API/Finance.js","Pages/Report/Getmoney.jsx"],"names":["setUserBranch","_ref","Object","_Users_1000code_Desktop_branch_cloudexpress_com_node_modules_pnpm_babel_runtime_7_3_1_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","data","auth_token","wrap","_context","prev","next","axios","post","process","headers","Content-Type","abrupt","sent","stop","_x","_x2","apply","this","arguments","getOneUserBranch","_ref2","_callee2","id","_context2","get","content-type","_x3","_x4","getUserBranchByBranchCode","_ref3","_callee3","branch_code","_context3","_x5","_x6","removeUserBranch","_ref4","_callee4","_context4","delete","_x7","_x8","updateUserById","_ref5","_callee5","_context5","put","_x9","_x10","_x11","getMyMoney","getMoneyFromCounter","Getmoney","user","useSelector","state","_Users_1000code_Desktop_branch_cloudexpress_com_node_modules_pnpm_babel_runtime_7_3_1_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","token","_useState","useState","_useState2","_Users_1000code_Desktop_branch_cloudexpress_com_node_modules_pnpm_babel_runtime_7_3_1_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","total_shipping_cost","_useState12","_useState13","_useState14","staff","setStaff","_useState15","_useState16","shippingCostStart","setShippingCostStart","_useState17","_useState18","COD","setCOD","_useState19","_useState20","shippingCostEnd","setShippingCostEnd","_useState21","total_cod_lak","total_cod_thb","total_cod_usd","_useState22","totalCOD","setTotalCOD","_useState23","_useState24","totalShipping","setTotalShipping","_useState25","Date","_useState26","dateStart","setDateStart","_useState27","_useState28","dateEnd","setDateEnd","_useState29","date_start","date_end","_useState30","search","setSearch","useEffect","then","res","cod","shipping_cost_start","shipping_cost_end","total_cod","length","total_shipping","total","catch","err","Alert","error","response","dateFormat","date","d","month","getMonth","day","getDate","year","getFullYear","join","dateFormatAux","sumShippingCost","userId","zum1","zum2","map","item","_id","user_id","get_money_by","zum","sumCODLak","sumCODThb","sumCODUsd","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","className","react_datepicker__WEBPACK_IMPORTED_MODULE_8___default","selected","onChange","handleDateStart","showTimeSelect","placeholderText","maxDate","handleDateEnd","rowSpan","colSpan","key","username","toLocaleString","totalCODLak","totalMoneyForSent"],"mappings":"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","file":"static/js/12.2f2ef9c4.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\nexport const setUserBranch = async(data, auth_token) => {\n    return await axios.post(process.env.REACT_APP_API_PATH + \"/u_branch\", data, {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            auth_token,\n        },\n    });\n};\n\nexport const getOneUserBranch = async(id, auth_token) => {\n    return await axios.get(\n        process.env.REACT_APP_API_PATH + \"/u_branch/\" + id, {\n            headers: {\n                \"content-type\": \"application/json\",\n                auth_token,\n            }\n        }\n    )\n}\n\n////=====work===\nexport const getUserBranchByBranchCode = async(branch_code, auth_token) => {\n    return await axios.get(process.env.REACT_APP_API_PATH + \"/user-branches/\" + branch_code, {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            auth_token,\n        },\n    });\n};\n\n////work\nexport const removeUserBranch = async(id, auth_token) => {\n    // console.log(auth_token)\n    return await axios.delete(\n        process.env.REACT_APP_API_PATH + \"/u_branch/\" + id, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                auth_token,\n            },\n        }\n    );\n};\n\n\nexport const updateUserById = async(id, data, auth_token) => {\n    return await axios.put(\n        process.env.REACT_APP_API_PATH + \"/u_branch/\" + id, data, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                auth_token,\n            },\n        }\n    );\n};","import axios from \"axios\";\n\nexport const getMyMoney = async (data, auth_token) => {\n  return await axios.post(\n    process.env.REACT_APP_API_PATH + \"/get-my-money\",\n    data,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        auth_token,\n      },\n    }\n  );\n};\nexport const getMoneyFromCounter = async (data, auth_token) => {\n  return await axios.post(\n    process.env.REACT_APP_API_PATH + \"/get-money-from-counter\",\n    data,\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        auth_token,\n      },\n    }\n  );\n};\n\n// export const getParcelsInBranch = async (data, auth_token) => {\n//   return await axios.post(\n//     process.env.REACT_APP_API_PATH + \"/dividends-for-branch\",\n//     data,\n//     {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         auth_token,\n//       },\n//     }\n//   );\n// };\n","import React, { useEffect, useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport Alert from \"../../Components/Alert\";\n\n// import DatePicker from \"react-date-picker\";\nimport { useSelector } from \"react-redux\";\nimport { formatDate, parcelType, dateSearch } from \"../../Functions/Functions\";\nimport { getTotalDividendsABranch } from \"../../API/Parcel\";\n\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { getMoneyFromCounter } from \"../../API/Finance\";\nimport { getUserBranchByBranchCode } from \"../../API/UserBranch\";\n\nconst Getmoney = () => {\n  const { user } = useSelector((state) => ({ ...state }));\n  const { token } = user;\n\n  const [filterData, setFilterData] = useState([]);\n  const [data, setData] = useState([]);\n\n  const [allUsers, setAllUser] = useState([]);\n\n  const [users, setUser] = useState([]);\n  const [total, setTotal] = useState([]);\n  const [result, setResult] = useState({\n    total_shipping_cost: \"\",\n  });\n  const [staff, setStaff] = useState([]);\n  const [shippingCostStart, setShippingCostStart] = useState([]);\n  const [COD, setCOD] = useState([]);\n  const [shippingCostEnd, setShippingCostEnd] = useState([]);\n\n  const [totalCOD, setTotalCOD] = useState({\n    total_cod_lak: 0,\n    total_cod_thb: 0,\n    total_cod_usd: 0,\n  });\n  const [totalShipping, setTotalShipping] = useState(null);\n\n  const [dateStart, setDateStart] = useState(new Date());\n  const [dateEnd, setDateEnd] = useState(new Date());\n  const [search, setSearch] = useState({\n    branch_code: user.branch_code,\n    date_start: \"\",\n    date_end: new Date(),\n  });\n\n  const { date_start, date_end } = search;\n\n  useEffect(() => {\n    date_start !== \"\" &&\n      date_end !== \"\" &&\n      getMoneyFromCounter(search, token)\n        .then((res) => {\n          setStaff(res.data.staff);\n\n          setCOD(res.data.cod);\n          setShippingCostStart(res.data.shipping_cost_start);\n          setShippingCostEnd(res.data.shipping_cost_end);\n          res.data.total_cod.length > 0 && setTotalCOD(res.data.total_cod[0]);\n          res.data.total_shipping.length > 0 &&\n            setTotalShipping(res.data.total_shipping[0].total);\n        })\n        .catch((err) => {\n          Alert.error(err.response.data.error);\n        });\n  }, [search]);\n\n  // --------------- format date -----------------------\n  const handleDateStart = (date) => {\n    setDateStart(date);\n    setSearch({ ...search, date_start: dateFormat(date) });\n  };\n\n  const handleDateEnd = (date) => {\n    setDateEnd(date);\n    setSearch({ ...search, date_end: date });\n  };\n\n  const dateFormatAux = (date) => {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [year, month, day].join(\"-\");\n  };\n\n  const dateFormat = (date) => {\n    let formatYearMonthDay = dateFormatAux(date);\n    return formatYearMonthDay;\n  };\n\n  const sumShippingCost = (userId) => {\n    let zum1 = null;\n    let zum2 = null;\n    shippingCostStart.map((item) => {\n      if (userId == item._id.user_id) {\n        zum1 = item.total;\n        return zum1;\n      }\n    });\n\n    shippingCostEnd.map((item) => {\n      if (userId == item._id.get_money_by) {\n        zum2 = item.total;\n        return zum2;\n      }\n    });\n    let zum = zum1 + zum2;\n    if (zum === 0) return \"-\";\n    return zum;\n  };\n\n  const sumCODLak = (userId) => {\n    let zum = null;\n    COD.map((item) => {\n      if (userId == item._id.get_money_by) {\n        zum = item.total_cod_lak;\n        return zum;\n      }\n    });\n\n    if (zum === 0) return \"-\";\n    return zum;\n  };\n  const sumCODThb = (userId) => {\n    let zum = null;\n    COD.map((item) => {\n      if (userId == item._id.get_money_by) {\n        zum = item.total_cod_thb;\n        return zum;\n      }\n    });\n\n    if (zum === 0) return \"-\";\n    return zum;\n  };\n  const sumCODUsd = (userId) => {\n    let zum = null;\n    COD.map((item) => {\n      if (userId == item._id.get_money_by) {\n        zum = item.total_cod_usd;\n        return zum;\n      }\n    });\n\n    if (zum === 0) return \"-\";\n    return zum;\n  };\n\n  const totalMoneyForSent = (totalShipping, totalCODLak) => {\n    if (typeof totalShipping === \"string\") {\n      totalShipping = 0;\n    }\n\n    return totalCODLak + totalShipping;\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"card card-body\">\n          <h3 className=\"text-danger mb-3\">ເກັບເງິນຈາກ Counter</h3>\n          <div className=\" row \">\n            <div className=\"col-auto\">\n              <DatePicker\n                selected={dateStart}\n                onChange={(date) => handleDateStart(date)}\n                showTimeSelect\n                dateFormat=\"dd/MM/yyyy HH:mm:ss\"\n                className=\"form-control\"\n                placeholderText=\"--/--/--\"\n                maxDate={new Date()}\n              />\n            </div>\n            <div className=\"col-auto\">\n              <DatePicker\n                selected={dateEnd}\n                onChange={(date) => handleDateEnd(date)}\n                showTimeSelect\n                dateFormat=\"dd/MM/yyyy HH:mm:ss\"\n                className=\"form-control\"\n                placeholderText=\"--/--/--\"\n                maxDate={new Date()}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* ------------------------------- */}\n      <div className=\"table-responsive text-nowrap\">\n        <div className=\"container\">\n          <div className=\"mt-3\">\n            <div className=\"card card-body mb-5\">\n              <div className=\"mb-3 table-responsive text-nowrap\">\n                <table className=\"table  table-borderless table-striped\">\n                  <thead className=\"bg-danger  text-white\">\n                    <tr>\n                      <th rowSpan={2}>ພະນັກງານ</th>\n                      <th rowSpan={2}>ຮັບ-ຈ່າຍ</th>\n                      <th colSpan={3} className=\"cod-th\">\n                        COD\n                      </th>\n                    </tr>\n                    <tr>\n                      <th>LAK</th>\n                      <th>THB</th>\n                      <th>USD</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {staff.map((item) => {\n                      return (\n                        <tr key={item._id}>\n                          <td>{item.username}</td>\n                          <td>\n                            {sumShippingCost(item._id) &&\n                              sumShippingCost(item._id).toLocaleString()}\n                          </td>\n                          <td>\n                            {sumCODLak(item._id) &&\n                              sumCODLak(item._id).toLocaleString()}\n                          </td>\n                          <td>\n                            {sumCODThb(item._id) &&\n                              sumCODThb(item._id).toLocaleString()}\n                          </td>\n                          <td>\n                            {sumCODUsd(item._id) &&\n                              sumCODUsd(item._id).toLocaleString()}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"card card-body border-danger\">\n            <div className=\"h4 text-danger mt-2 \">\n              ຍອດເງິນທີ່ຕ້ອງສົ່ງ ບໍລິສັດ\n            </div>\n            <table className=\"table  table-borderless table-striped\">\n              <thead className=\"  text-danger\">\n                <tr>\n                  <th rowSpan={2}>#</th>\n                  <th rowSpan={2}>ຮັບ-ຈ່າຍ</th>\n                  <th colSpan={3} className=\"cod-th\">\n                    COD\n                  </th>\n                </tr>\n                <tr>\n                  <th>LAK</th>\n                  <th>THB</th>\n                  <th>USD</th>\n                  <th className=\"text-center\">ລວມກີບ</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>ຍອດເງິນທີ່ຕ້ອງສົ່ງ ບໍລິສັດ</td>\n                  <td>\n                    {totalShipping !== null\n                      ? totalShipping.toLocaleString()\n                      : \"-\"}\n                  </td>\n\n                  <td>\n                    {totalCOD && totalCOD.total_cod_lak > 0\n                      ? totalCOD.total_cod_lak.toLocaleString()\n                      : \"-\"}\n                  </td>\n                  <td className=\" text-danger \">\n                    {totalCOD && totalCOD.total_cod_thb > 0\n                      ? totalCOD.total_cod_thb.toLocaleString()\n                      : \"-\"}\n                  </td>\n                  <td className=\" text-danger \">\n                    {totalCOD && totalCOD.total_cod_usd > 0\n                      ? totalCOD.total_cod_usd.toLocaleString()\n                      : \"-\"}\n                  </td>\n                  <td className=\" text-danger text-center\">\n                    {totalMoneyForSent(\n                      totalShipping,\n                      totalCOD.total_cod_lak\n                    ).toLocaleString() + \" ກີບ\"}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Getmoney;\n"],"sourceRoot":""}