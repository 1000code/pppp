{"version":3,"sources":["../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/.pnpm/chart.js@3.8.0/node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/.pnpm/chart.js@3.8.0/node_modules/chart.js/dist/chart.esm.js","../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/.pnpm/react-chartjs-2@4.2.0_yw232gbma4xqgfjmup6t23g3w4/node_modules/react-chartjs-2/dist/index.js"],"names":["_assertThisInitialized","self","ReferenceError","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","_possibleConstructorReturn","call","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","get_get","target","property","receiver","Reflect","get","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","TypeError","create","writable","configurable","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","_unsupportedIterableToArray","length","i","F","s","done","e","_e","f","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","ticking","_len","arguments","rest","_key","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","noop","uid","id","isNullOrUndef","type","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","_step","_iterator","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","isNaN","x","y","epsilon","abs","_setMinAndMaxByKey","array","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","undefined","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","helpers_segment_round","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","c","hex","toConsumableArray","h1","h2","eq","isShort","r","g","helpers_segment_alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","helpers_segment_names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","helpers_segment_to","helpers_segment_from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","rgbParse","helpers_segment_Color","Color","classCallCheck","this","ret","hexParse","_rgb","_valid","createClass","concat","_hexString","_hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","helpers_segment_interpolate","val","deg","_rotate","set","index_esm","isPatternOrGradient","helpers_segment_color","getHoverColor","saturate","darken","hexString","overrides","helpers_segment_descriptors","getScope$1","node","split","_set","root","scope","values","defaults","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","targetScope","targetName","_Object$definePropert","scopeObject","targetScopeObject","privateName","defineProperties","defineProperty","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","push","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","_step2","objProps","read","prop","_iterator2","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","Set","add","_createResolver","scopes","_cache","prefixes","rootScopes","getTarget","_resolve","toStringTag","Proxy","deleteProperty","_keys","_cached","proxy","_step5","_iterator5","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","chunks_helpers_segment_descriptors","setContext","override","descriptors","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","filter","_step3","_iterator3","resolver","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_proxy$_scriptable","_proxy$_indexable","_proxy$_allKeys","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_step4","_iterator4","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","_step6","_iterator6","_step7","_iterator7","_step8","_iterator8","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_this$_parsing$key","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","splineCurveMonotone","pointBefore","pointCurrent","valueAxis","pointsLen","deltaK","mK","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","useOffsetPos","shadowRoot","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","_getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","helpers_segment_getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRightToLeftAdapter","rectX","_x","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_x2","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","bounds","prevValue","startBound","endBound","_propertyFn2","_getSegment","_propertyFn","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","_step9","_iterator9","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","chart_esm_createForOfIteratorHelper","chart_esm_arrayLikeToArray","chart_esm_unsupportedIterableToArray","__webpack_require__","__webpack_exports__","chart_esm_BarController","chart_esm_BarElement","chart_esm_BubbleController","chart_esm_CategoryScale","chart_esm_Chart","chart_esm_DoughnutController","plugin_legend","chart_esm_LineController","chart_esm_LinearScale","chart_esm_PieController","chart_esm_PolarAreaController","chart_esm_RadarController","chart_esm_ScatterController","plugin_title","plugin_tooltip","animator","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_this","_update","_refresh","_this2","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","event","cb","_getAnims","_this$_getAnims$items","reduce","acc","cur","_duration","cancel","interpolators","boolean","to","factor","c0","valid","mix","number","chart_esm_Animation","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","chart_esm_animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","chart_esm_Animations","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","update","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","_applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_index","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","chart_esm_DatasetController","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","_len3","_key3","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","_parsed$i","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","_getUserBounds","_scale$getUserBounds","getUserBounds","minDefined","maxDefined","chart_esm_getUserBounds","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","_this3","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","_step4$value","slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_args2","_dataChanges","_sync","newCount","computeMinSampleSize","curr","$bar","visibleMetas","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","_borderProps","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","_DatasetController","BarController","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","last","grouped","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","_this$_cachedMeta","_this$options","baseValue","minBarLength","actualBase","floating","applyStack","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","_DatasetController2","BubbleController","_this$_cachedMeta2","tooltip","title","_DatasetController3","DoughnutController","_this4","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_this$_getRotationExt","_getRotationExtents","_getRatioAndOffset","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_DatasetController4","LineController","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","pointCount","_iScale$getUserBounds","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","_this$_cachedMeta3","_this$options2","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","_DatasetController5","PolarAreaController","_this5","bind","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","angleLines","display","circular","pointLabels","_DoughnutController","PieController","_DatasetController6","RadarController","_fullLoop","pointPosition","getPointPositionForValue","_LineController","ScatterController","chart_esm_abstract","chart_esm_DateAdapter","DateAdapter","timestamp","_format","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","_metasets$i","_index2","_binarySearch","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","_element$getProps","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","_updateDims","setBoxDims","placeBoxes","userPadding","padding","_height","_width","autoPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","_box","_box$options","_box$options$stackWei","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","chart_esm_BasePlatform","BasePlatform","chart_esm_BasicPlatform","_BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","_getRelativePosition","native","fromNativeEvent","addListener","chart_esm_DomPlatform","_BasePlatform2","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","chart_esm_Element","Element","_this$getProps","final","_this8","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","chart_esm_skip","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","chart_esm_Scale","_Element","Scale","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","_this$getUserBounds","metas","getMinMax","xLabels","yLabels","beforeUpdate","_this$options3","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","_this$options4","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_this$options5","_this$options5$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options6","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","_positionAxisID2","_value2","limit","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","_ret","_positionAxisID3","_value3","halfCount","tickTextAlign","backdrop","labelPadding","_this$options7","_this$options8","_this$options8$ticks","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","_this$options9","_titleArgs","titleX","titleY","_positionAxisID","_value","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","_this10","tz","gz","axisID","fontSize","chart_esm_TypedRegistry","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","chart_esm_registry","Registry","controllers","_typedRegistries","_each","_len2","_key2","_len4","_key4","_len5","_key5","_len6","_key6","_get","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","typedRegistry","_this11","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","chart_esm_PluginService","PluginService","_init","hook","_createDescriptors","_step10","_iterator10","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","_i","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","chart_esm_addIfFound","chart_esm_Config","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","_getResolver","getResolver","subPrefixes","_step12","_descriptors2","_iterator12","chart_esm_hasFunction","needContext","_step11","_iterator11","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","animationOptions","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","_i2","intKey","Chart","userConfig","_this12","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","onResize","render","axisOptions","_this13","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","_this14","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_defaults$datasets$ty","getElement","_updateMetasets","_this15","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this16","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","_step13","_iterator13","_getUniformDataChanges","_step13$value","datasetCount","makeSet","changeSet","_this17","noArea","_this17$_layers","_idx","_i3","_ilen","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this18","_add","_this19","detached","_remove","isAttached","_this20","activeElements","_this21","lastActive","_ref2","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","_this22","inChartArea","eventFilter","_handleEvent","_this$_active","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","_this$options10","chart_esm_invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","_pCenter","_pCenter2","p8","_pCenter3","chart_esm_drawBorder","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","chart_esm_ArcElement","_Element2","ArcElement","_this23","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","betweenAngles","withinRadius","_this$getProps3","_this$options11","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","chart_esm_pathSegment","_pathVars","lineMethod","stepped","getLineMethod","_ref3","_ref3$move","fastPathSegment","prevX","lastY","_pathVars2","_ref4","_ref4$move","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","chart_esm_draw","path","_path","strokePathWithCache","_step14","segmentMethod","_iterator14","strokePathDirect","chart_esm_LineElement","_Element3","LineElement","_this24","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","_segments$i","interpolated","_step15","_iterator15","_findStartAndEnd","findStartAndEnd","solidSegments","_computeSegments","inRange$1","hitRadius","chart_esm_PointElement","_Element4","PointElement","_this25","mouseX","mouseY","_this$getProps4","_this$getProps5","hoverRadius","getBarBounds","bar","half","_bar$getProps","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","_inRange","skipX","skipY","addNormalRectPath","inflateRect","refRect","_Element5","BarElement","_this26","_this$options12","_boundingRects","addRectPath","_this$getProps6","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","itemHeight","chart_esm_Legend","_Element6","Legend","_this27","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this28","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","_this$options13","rtlHelper","_step21","_iterator21","hitbox","_step22","_iterator22","_hitbox","_draw","cursor","_this29","defaultColor","fontColor","halfFontSize","_getBoxSize2","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","_element","_args","adjustHitBoxes","afterEvent","handleEvent","ci","_chart$legend$options","chart_esm_Title","_Element7","Title","_this30","_padding","textSize","fontOpts","_this$_drawArgs","_drawArgs","titleBlock","createTitle","positioners","WeakMap","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","_controller$getLabelA","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","_chart$chartArea","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","_toTRBLCorners","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","chart_esm_Tooltip","_Element8","Tooltip","_this31","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","_this32","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","_this33","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","_this34","_ref9","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_willRender","labelCount","addIfString","addedLabels","unshift","_Scale","CategoryScale","_this35","_startValue","_valueRange","_addedLabels","added","_step23","_iterator23","_step23$value","_index3","chart_esm_validIndex","lastIndexOf","findOrAddLabel","_this$getUserBounds2","_this$getMinMax","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref10","chart_esm_LinearScaleBase","_Scale2","LinearScaleBase","_this36","_endValue","_this$getUserBounds3","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","_LinearScaleBase","LinearScale","_this$getMinMax2","handleTickRangeOptions","isMajor","tickVal","chart_esm_LogarithmicScale","_Scale3","LogarithmicScale","_this37","_zero","_this$getMinMax3","_this$getUserBounds4","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","chart_esm_RadialLinearScale","_LinearScaleBase2","RadialLinearScale","_this38","_this$getMinMax4","_this39","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","_this$_pointLabelItem","_this$options14","_this40","_scale$_pointLabelIte","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","_this41","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","_parse","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","_lookup2","ticksFromTimestamps","majorUnit","setMajorTicks","chart_esm_TimeScale","_Scale4","TimeScale","_this42","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","chart_esm_interpolate","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","chart_esm_TimeSeriesScale","_TimeScale","TimeSeriesScale","_this43","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bar","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","objectSpread","cloneData","nextData","ChartComponent","param","_param$height","_param$width","_param$redraw","redraw","_param$plugins","fallbackContent","updateMode","canvasRef","react","chartRef","renderChart","chart_esm","destroyChart","destroy","nextOptions","react_default","createElement","role","createTypedChart","registerables"],"mappings":"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","file":"static/js/24.65791f8b.chunk.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _defineProperty from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\nvar requestAnimFrame = function () {\n  if (typeof window === 'undefined') {\n    return function (callback) {\n      return callback();\n    };\n  }\n\n  return window.requestAnimationFrame;\n}();\n\nfunction throttled(fn, thisArg, updateFn) {\n  var updateArgs = updateFn || function (args) {\n    return Array.prototype.slice.call(args);\n  };\n\n  var ticking = false;\n  var args = [];\n  return function () {\n    for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n      rest[_key] = arguments[_key];\n    }\n\n    args = updateArgs(rest);\n\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\nfunction debounce(fn, delay) {\n  var timeout;\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n\n    return delay;\n  };\n}\n\nvar _toLeftRightCenter = function _toLeftRightCenter(align) {\n  return align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n};\n\nvar _alignStartEnd = function _alignStartEnd(align, start, end) {\n  return align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n};\n\nvar _textX = function _textX(align, left, right, rtl) {\n  var check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\n\nvar uid = function () {\n  var id = 0;\n  return function () {\n    return id++;\n  };\n}();\n\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\n\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n\n  var type = Object.prototype.toString.call(value);\n\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\nvar isNumberFinite = function isNumberFinite(value) {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n};\n\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nvar toPercentage = function toPercentage(value, dimension) {\n  return typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\n};\n\nvar toDimension = function toDimension(value, dimension) {\n  return typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n};\n\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\nfunction each(loopable, fn, thisArg, reverse) {\n  var i, len, keys;\n\n  if (isArray(loopable)) {\n    len = loopable.length;\n\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\nfunction _elementsEqual(a0, a1) {\n  var i, ilen, v0, v1;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n\n  if (isObject(source)) {\n    var target = Object.create(null);\n    var keys = Object.keys(source);\n    var klen = keys.length;\n    var k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  var tval = target[key];\n  var sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\n\nfunction merge(target, source, options) {\n  var sources = isArray(source) ? source : [source];\n  var ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target;\n  }\n\n  options = options || {};\n  var merger = options.merger || _merger;\n\n  for (var i = 0; i < ilen; ++i) {\n    source = sources[i];\n\n    if (!isObject(source)) {\n      continue;\n    }\n\n    var keys = Object.keys(source);\n\n    for (var k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n\n  return target;\n}\n\nfunction mergeIf(target, source) {\n  return merge(target, source, {\n    merger: _mergerIf\n  });\n}\n\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  var tval = target[key];\n  var sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\n\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\nvar emptyString = '';\nvar dot = '.';\n\nfunction indexOfDotOrLength(key, start) {\n  var idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\n\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n\n  var pos = 0;\n  var idx = indexOfDotOrLength(key, pos);\n\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n\n  return obj;\n}\n\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar defined = function defined(value) {\n  return typeof value !== 'undefined';\n};\n\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n\nvar setsEqual = function setsEqual(a, b) {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  var _iterator = _createForOfIteratorHelper(a),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n\n      if (!b.has(item)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return true;\n};\n\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nvar PI = Math.PI;\nvar TAU = 2 * PI;\nvar PITAU = TAU + PI;\nvar INFINITY = Number.POSITIVE_INFINITY;\nvar RAD_PER_DEG = PI / 180;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\nvar log10 = Math.log10;\nvar sign = Math.sign;\n\nfunction niceNum(range) {\n  var roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  var niceRange = Math.pow(10, Math.floor(log10(range)));\n  var fraction = range / niceRange;\n  var niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\nfunction _factorize(value) {\n  var result = [];\n  var sqrt = Math.sqrt(value);\n  var i;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n\n  result.sort(function (a, b) {\n    return a - b;\n  }).pop();\n  return result;\n}\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\n\nfunction almostWhole(x, epsilon) {\n  var rounded = Math.round(x);\n  return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n\nfunction _setMinAndMaxByKey(array, target, property) {\n  var i, ilen, value;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\n\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\n\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n\n  var e = 1;\n  var p = 0;\n\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n\n  return p;\n}\n\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  var distanceFromXCenter = anglePoint.x - centrePoint.x;\n  var distanceFromYCenter = anglePoint.y - centrePoint.y;\n  var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < -0.5 * PI) {\n    angle += TAU;\n  }\n\n  return {\n    angle: angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\n\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  var a = _normalizeAngle(angle);\n\n  var s = _normalizeAngle(start);\n\n  var e = _normalizeAngle(end);\n\n  var angleToStart = _normalizeAngle(s - a);\n\n  var angleToEnd = _normalizeAngle(e - a);\n\n  var startToAngle = _normalizeAngle(a - s);\n\n  var endToAngle = _normalizeAngle(a - e);\n\n  return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nfunction _isBetween(value, start, end) {\n  var epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1e-6;\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nvar atEdge = function atEdge(t) {\n  return t === 0 || t === 1;\n};\n\nvar elasticIn = function elasticIn(t, s, p) {\n  return -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\n};\n\nvar elasticOut = function elasticOut(t, s, p) {\n  return Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n};\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t -= 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t -= 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t -= 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * HALF_PI) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * HALF_PI);\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    return atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    return t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t -= 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    return (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    return atEdge(t) ? t : elasticIn(t, 0.075, 0.3);\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    return atEdge(t) ? t : elasticOut(t, 0.075, 0.3);\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 0.1125;\n    var p = 0.45;\n    return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    var m = 7.5625;\n    var d = 2.75;\n\n    if (t < 1 / d) {\n      return m * t * t;\n    }\n\n    if (t < 2 / d) {\n      return m * (t -= 1.5 / d) * t + 0.75;\n    }\n\n    if (t < 2.5 / d) {\n      return m * (t -= 2.25 / d) * t + 0.9375;\n    }\n\n    return m * (t -= 2.625 / d) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    return t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\n\nfunction round(v) {\n  return v + 0.5 | 0;\n}\n\nvar lim = function lim(v, l, h) {\n  return Math.max(Math.min(v, h), l);\n};\n\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\n\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\n\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\n\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nvar map$1 = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  A: 10,\n  B: 11,\n  C: 12,\n  D: 13,\n  E: 14,\n  F: 15,\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15\n};\n\nvar hex = _toConsumableArray('0123456789ABCDEF');\n\nvar h1 = function h1(b) {\n  return hex[b & 0xF];\n};\n\nvar h2 = function h2(b) {\n  return hex[(b & 0xF0) >> 4] + hex[b & 0xF];\n};\n\nvar eq = function eq(b) {\n  return (b & 0xF0) >> 4 === (b & 0xF);\n};\n\nvar isShort = function isShort(v) {\n  return eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n};\n\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? map$1[str[7]] << 4 | map$1[str[8]] : 255\n      };\n    }\n  }\n\n  return ret;\n}\n\nvar alpha = function alpha(a, f) {\n  return a < 255 ? f(a) : '';\n};\n\nfunction _hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f) : undefined;\n}\n\nvar HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n\nfunction hsl2rgbn(h, s, l) {\n  var a = s * Math.min(l, 1 - l);\n\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  };\n\n  return [f(0), f(8), f(4)];\n}\n\nfunction hsv2rgbn(h, s, v) {\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 60) % 6;\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  };\n\n  return [f(5), f(3), f(1)];\n}\n\nfunction hwb2rgbn(h, w, b) {\n  var rgb = hsl2rgbn(h, 1, 0.5);\n  var i;\n\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n\n  return rgb;\n}\n\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return (g - b) / d + (g < b ? 6 : 0);\n  }\n\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n\n  return (r - g) / d + 4;\n}\n\nfunction rgb2hsl(v) {\n  var range = 255;\n  var r = v.r / range;\n  var g = v.g / range;\n  var b = v.b / range;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var l = (max + min) / 2;\n  var h, s, d;\n\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n\n  return [h | 0, s || 0, l];\n}\n\nfunction calln(f, a, b, c) {\n  return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map(n2b);\n}\n\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\n\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\n\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\n\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\n\nfunction hueParse(str) {\n  var m = HUE_RE.exec(str);\n  var a = 255;\n  var v;\n\n  if (!m) {\n    return;\n  }\n\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n\n  var h = hue(+m[2]);\n  var p1 = +m[3] / 100;\n  var p2 = +m[4] / 100;\n\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\n\nfunction _rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\n\nfunction _hslString(v) {\n  if (!v) {\n    return;\n  }\n\n  var a = rgb2hsl(v);\n  var h = a[0];\n  var s = n2p(a[1]);\n  var l = n2p(a[2]);\n  return v.a < 255 ? \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(b2n(v.a), \")\") : \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\");\n}\n\nvar map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nvar names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\n\nfunction unpack() {\n  var unpacked = {};\n  var keys = Object.keys(names$1);\n  var tkeys = Object.keys(map);\n  var i, j, k, ok, nk;\n\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n\n  return unpacked;\n}\n\nvar names;\n\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n\n  var a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nvar RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n\nfunction rgbParse(str) {\n  var m = RGB_RE.exec(str);\n  var a = 255;\n  var r, g, b;\n\n  if (!m) {\n    return;\n  }\n\n  if (m[7] !== r) {\n    var v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\n\nfunction _rgbString(v) {\n  return v && (v.a < 255 ? \"rgba(\".concat(v.r, \", \").concat(v.g, \", \").concat(v.b, \", \").concat(b2n(v.a), \")\") : \"rgb(\".concat(v.r, \", \").concat(v.g, \", \").concat(v.b, \")\"));\n}\n\nvar to = function to(v) {\n  return v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\n};\n\nvar from = function from(v) {\n  return v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n};\n\nfunction _interpolate(rgb1, rgb2, t) {\n  var r = from(b2n(rgb1.r));\n  var g = from(b2n(rgb1.g));\n  var b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    var tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\n\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\n\nfunction fromObject(input) {\n  var v = {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 255\n  };\n\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {\n        r: input[0],\n        g: input[1],\n        b: input[2],\n        a: 255\n      };\n\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1\n    });\n    v.a = n2b(v.a);\n  }\n\n  return v;\n}\n\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n\n  return hueParse(str);\n}\n\nvar Color = /*#__PURE__*/function () {\n  function Color(input) {\n    _classCallCheck(this, Color);\n\n    if (input instanceof Color) {\n      return input;\n    }\n\n    var type = typeof input;\n    var v;\n\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n\n    this._rgb = v;\n    this._valid = !!v;\n  }\n\n  _createClass(Color, [{\n    key: \"rgbString\",\n    value: function rgbString() {\n      return this._valid ? _rgbString(this._rgb) : undefined;\n    }\n  }, {\n    key: \"hexString\",\n    value: function hexString() {\n      return this._valid ? _hexString(this._rgb) : undefined;\n    }\n  }, {\n    key: \"hslString\",\n    value: function hslString() {\n      return this._valid ? _hslString(this._rgb) : undefined;\n    }\n  }, {\n    key: \"mix\",\n    value: function mix(color, weight) {\n      if (color) {\n        var c1 = this.rgb;\n        var c2 = color.rgb;\n        var w2;\n        var p = weight === w2 ? 0.5 : weight;\n        var w = 2 * p - 1;\n        var a = c1.a - c2.a;\n        var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        w2 = 1 - w1;\n        c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n        c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n        c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n        c1.a = p * c1.a + (1 - p) * c2.a;\n        this.rgb = c1;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(color, t) {\n      if (color) {\n        this._rgb = _interpolate(this._rgb, color._rgb, t);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Color(this.rgb);\n    }\n  }, {\n    key: \"alpha\",\n    value: function alpha(a) {\n      this._rgb.a = n2b(a);\n      return this;\n    }\n  }, {\n    key: \"clearer\",\n    value: function clearer(ratio) {\n      var rgb = this._rgb;\n      rgb.a *= 1 - ratio;\n      return this;\n    }\n  }, {\n    key: \"greyscale\",\n    value: function greyscale() {\n      var rgb = this._rgb;\n      var val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n      rgb.r = rgb.g = rgb.b = val;\n      return this;\n    }\n  }, {\n    key: \"opaquer\",\n    value: function opaquer(ratio) {\n      var rgb = this._rgb;\n      rgb.a *= 1 + ratio;\n      return this;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      var v = this._rgb;\n      v.r = 255 - v.r;\n      v.g = 255 - v.g;\n      v.b = 255 - v.b;\n      return this;\n    }\n  }, {\n    key: \"lighten\",\n    value: function lighten(ratio) {\n      modHSL(this._rgb, 2, ratio);\n      return this;\n    }\n  }, {\n    key: \"darken\",\n    value: function darken(ratio) {\n      modHSL(this._rgb, 2, -ratio);\n      return this;\n    }\n  }, {\n    key: \"saturate\",\n    value: function saturate(ratio) {\n      modHSL(this._rgb, 1, ratio);\n      return this;\n    }\n  }, {\n    key: \"desaturate\",\n    value: function desaturate(ratio) {\n      modHSL(this._rgb, 1, -ratio);\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(deg) {\n      _rotate(this._rgb, deg);\n\n      return this;\n    }\n  }, {\n    key: \"valid\",\n    get: function get() {\n      return this._valid;\n    }\n  }, {\n    key: \"rgb\",\n    get: function get() {\n      var v = clone(this._rgb);\n\n      if (v) {\n        v.a = b2n(v.a);\n      }\n\n      return v;\n    },\n    set: function set(obj) {\n      this._rgb = fromObject(obj);\n    }\n  }]);\n\n  return Color;\n}();\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    var type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\n\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nvar overrides = Object.create(null);\nvar descriptors = Object.create(null);\n\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n\n  var keys = key.split('.');\n\n  for (var i = 0, n = keys.length; i < n; ++i) {\n    var k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n\n  return node;\n}\n\nfunction _set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n\n  return merge(getScope$1(root, ''), scope);\n}\n\nvar Defaults = /*#__PURE__*/function () {\n  function Defaults(_descriptors) {\n    _classCallCheck(this, Defaults);\n\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n\n    this.devicePixelRatio = function (context) {\n      return context.chart.platform.getDevicePixelRatio();\n    };\n\n    this.elements = {};\n    this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n\n    this.hoverBackgroundColor = function (ctx, options) {\n      return getHoverColor(options.backgroundColor);\n    };\n\n    this.hoverBorderColor = function (ctx, options) {\n      return getHoverColor(options.borderColor);\n    };\n\n    this.hoverColor = function (ctx, options) {\n      return getHoverColor(options.color);\n    };\n\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n\n  _createClass(Defaults, [{\n    key: \"set\",\n    value: function set(scope, values) {\n      return _set(this, scope, values);\n    }\n  }, {\n    key: \"get\",\n    value: function get(scope) {\n      return getScope$1(this, scope);\n    }\n  }, {\n    key: \"describe\",\n    value: function describe(scope, values) {\n      return _set(descriptors, scope, values);\n    }\n  }, {\n    key: \"override\",\n    value: function override(scope, values) {\n      return _set(overrides, scope, values);\n    }\n  }, {\n    key: \"route\",\n    value: function route(scope, name, targetScope, targetName) {\n      var _Object$definePropert;\n\n      var scopeObject = getScope$1(this, scope);\n      var targetScopeObject = getScope$1(this, targetScope);\n      var privateName = '_' + name;\n      Object.defineProperties(scopeObject, (_Object$definePropert = {}, _defineProperty(_Object$definePropert, privateName, {\n        value: scopeObject[name],\n        writable: true\n      }), _defineProperty(_Object$definePropert, name, {\n        enumerable: true,\n        get: function get() {\n          var local = this[privateName];\n          var target = targetScopeObject[targetName];\n\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n\n          return valueOrDefault(local, target);\n        },\n        set: function set(value) {\n          this[privateName] = value;\n        }\n      }), _Object$definePropert));\n    }\n  }]);\n\n  return Defaults;\n}();\n\nvar defaults = new Defaults({\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('on');\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'events';\n  },\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n\nfunction _measureText(ctx, data, gc, longest, string) {\n  var textWidth = data[string];\n\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n\n  return longest;\n}\n\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  var data = cache.data = cache.data || {};\n  var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n  ctx.font = font;\n  var longest = 0;\n  var ilen = arrayOfThings.length;\n  var i, j, jlen, thing, nestedThing;\n\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n  var gcLen = gc.length / 2;\n\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n\n    gc.splice(0, gcLen);\n  }\n\n  return longest;\n}\n\nfunction _alignPixel(chart, pixel, width) {\n  var devicePixelRatio = chart.currentDevicePixelRatio;\n  var halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nfunction drawPoint(ctx, options, x, y) {\n  var type, xOffset, yOffset, size, cornerRadius;\n  var style = options.pointStyle;\n  var rotation = options.rotation;\n  var radius = options.radius;\n  var rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n    default:\n      ctx.arc(x, y, radius, 0, TAU);\n      ctx.closePath();\n      break;\n\n    case 'triangle':\n      ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n\n    case 'rectRounded':\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        ctx.rect(x - size, y - size, 2 * size, 2 * size);\n        break;\n      }\n\n      rad += QUARTER_PI;\n\n    case 'rectRot':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      ctx.closePath();\n      break;\n\n    case 'crossRot':\n      rad += QUARTER_PI;\n\n    case 'cross':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      break;\n\n    case 'star':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      rad += QUARTER_PI;\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      break;\n\n    case 'line':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n      break;\n  }\n\n  ctx.fill();\n\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\n\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\n\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n\n  if (mode === 'middle') {\n    var midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n\n  ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n\nfunction renderText(ctx, text, x, y, font) {\n  var opts = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var lines = isArray(text) ? text : [text];\n  var stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  var i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    var metrics = ctx.measureText(line);\n    var left = x - metrics.actualBoundingBoxLeft;\n    var right = x + metrics.actualBoundingBoxRight;\n    var top = y - metrics.actualBoundingBoxAscent;\n    var bottom = y + metrics.actualBoundingBoxDescent;\n    var yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction addRoundedRectPath(ctx, rect) {\n  var x = rect.x,\n      y = rect.y,\n      w = rect.w,\n      h = rect.h,\n      radius = rect.radius;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nvar LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nvar FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n\nfunction toLineHeight(value, size) {\n  var matches = ('' + value).match(LINE_HEIGHT);\n\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n\n    case '%':\n      value /= 100;\n      break;\n  }\n\n  return size * value;\n}\n\nvar numberOrZero = function numberOrZero(v) {\n  return +v || 0;\n};\n\nfunction _readValueToProps(value, props) {\n  var ret = {};\n  var objProps = isObject(props);\n  var keys = objProps ? Object.keys(props) : props;\n  var read = isObject(value) ? objProps ? function (prop) {\n    return valueOrDefault(value[prop], value[props[prop]]);\n  } : function (prop) {\n    return value[prop];\n  } : function () {\n    return value;\n  };\n\n  var _iterator2 = _createForOfIteratorHelper(keys),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var prop = _step2.value;\n      ret[prop] = numberOrZero(read(prop));\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return ret;\n}\n\nfunction toTRBL(value) {\n  return _readValueToProps(value, {\n    top: 'y',\n    right: 'x',\n    bottom: 'y',\n    left: 'x'\n  });\n}\n\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\nfunction toPadding(value) {\n  var obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\n\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  var size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n\n  var style = valueOrDefault(options.style, fallback.style);\n\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n\n  var font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size: size,\n    style: style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\n\nfunction resolve(inputs, context, index, info) {\n  var cacheable = true;\n  var i, ilen, value;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n\n    if (value === undefined) {\n      continue;\n    }\n\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n\n      return value;\n    }\n  }\n}\n\nfunction _addGrace(minmax, grace, beginAtZero) {\n  var min = minmax.min,\n      max = minmax.max;\n  var change = toDimension(grace, (max - min) / 2);\n\n  var keepZero = function keepZero(value, add) {\n    return beginAtZero && value === 0 ? 0 : value + add;\n  };\n\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || function (index) {\n    return table[index] < value;\n  };\n\n  var hi = table.length - 1;\n  var lo = 0;\n  var mid;\n\n  while (hi - lo > 1) {\n    mid = lo + hi >> 1;\n\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {\n    lo: lo,\n    hi: hi\n  };\n}\n\nvar _lookupByKey = function _lookupByKey(table, key, value) {\n  return _lookup(table, value, function (index) {\n    return table[index][key] < value;\n  });\n};\n\nvar _rlookupByKey = function _rlookupByKey(table, key, value) {\n  return _lookup(table, value, function (index) {\n    return table[index][key] >= value;\n  });\n};\n\nfunction _filterBetween(values, min, max) {\n  var start = 0;\n  var end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach(function (key) {\n    var method = '_onData' + _capitalize(key);\n\n    var base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value: function value() {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        var res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach(function (object) {\n          if (typeof object[method] === 'function') {\n            object[method].apply(object, args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\nfunction unlistenArrayEvents(array, listener) {\n  var stub = array._chartjs;\n\n  if (!stub) {\n    return;\n  }\n\n  var listeners = stub.listeners;\n  var index = listeners.indexOf(listener);\n\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach(function (key) {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\n\nfunction _arrayUnique(items) {\n  var set = new Set();\n  var i, ilen;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes) {\n  var _cache;\n\n  var prefixes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [''];\n  var rootScopes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scopes;\n  var fallback = arguments.length > 3 ? arguments[3] : undefined;\n  var getTarget = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function () {\n    return scopes[0];\n  };\n\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n\n  var cache = (_cache = {}, _defineProperty(_cache, Symbol.toStringTag, 'Object'), _defineProperty(_cache, \"_cacheable\", true), _defineProperty(_cache, \"_scopes\", scopes), _defineProperty(_cache, \"_rootScopes\", rootScopes), _defineProperty(_cache, \"_fallback\", fallback), _defineProperty(_cache, \"_getTarget\", getTarget), _defineProperty(_cache, \"override\", function override(scope) {\n    return _createResolver([scope].concat(_toConsumableArray(scopes)), prefixes, rootScopes, fallback);\n  }), _cache);\n  return new Proxy(cache, {\n    deleteProperty: function deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get: function get(target, prop) {\n      return _cached(target, prop, function () {\n        return _resolveWithPrefixes(prop, prefixes, scopes, target);\n      });\n    },\n    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf: function getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has: function has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys: function ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set: function set(target, prop, value) {\n      var storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\n\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  var cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: function setContext(ctx) {\n      return _attachContext(proxy, ctx, subProxy, descriptorDefaults);\n    },\n    override: function override(scope) {\n      return _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults);\n    }\n  };\n  return new Proxy(cache, {\n    deleteProperty: function deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get: function get(target, prop, receiver) {\n      return _cached(target, prop, function () {\n        return _resolveWithContext(target, prop, receiver);\n      });\n    },\n    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n        enumerable: true,\n        configurable: true\n      } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf: function getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has: function has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys: function ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set: function set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\n\nfunction _descriptors(proxy) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    scriptable: true,\n    indexable: true\n  };\n\n  var _proxy$_scriptable = proxy._scriptable,\n      _scriptable = _proxy$_scriptable === void 0 ? defaults.scriptable : _proxy$_scriptable,\n      _proxy$_indexable = proxy._indexable,\n      _indexable = _proxy$_indexable === void 0 ? defaults.indexable : _proxy$_indexable,\n      _proxy$_allKeys = proxy._allKeys,\n      _allKeys = _proxy$_allKeys === void 0 ? defaults.allKeys : _proxy$_allKeys;\n\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : function () {\n      return _scriptable;\n    },\n    isIndexable: isFunction(_indexable) ? _indexable : function () {\n      return _indexable;\n    }\n  };\n}\n\nvar readKey = function readKey(prefix, name) {\n  return prefix ? prefix + _capitalize(name) : name;\n};\n\nvar needsSubResolver = function needsSubResolver(prop, value) {\n  return isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\n};\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  var value = resolve();\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  var _proxy = target._proxy,\n      _context = target._context,\n      _subProxy = target._subProxy,\n      descriptors = target._descriptors;\n  var value = _proxy[prop];\n\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  var _proxy = target._proxy,\n      _context = target._context,\n      _subProxy = target._subProxy,\n      _stack = target._stack;\n\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n\n  _stack.add(prop);\n\n  value = value(_context, _subProxy || receiver);\n\n  _stack.delete(prop);\n\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  var _proxy = target._proxy,\n      _context = target._context,\n      _subProxy = target._subProxy,\n      descriptors = target._descriptors;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    var arr = value;\n\n    var scopes = _proxy._scopes.filter(function (s) {\n      return s !== arr;\n    });\n\n    value = [];\n\n    var _iterator3 = _createForOfIteratorHelper(arr),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var item = _step3.value;\n        var resolver = createSubResolver(scopes, _proxy, prop, item);\n        value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nvar getScope = function getScope(key, parent) {\n  return key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n};\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  var _iterator4 = _createForOfIteratorHelper(parentScopes),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var parent = _step4.value;\n      var scope = getScope(key, parent);\n\n      if (scope) {\n        set.add(scope);\n        var fallback = resolveFallback(scope._fallback, key, value);\n\n        if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n          return fallback;\n        }\n      } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n        return null;\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  var rootScopes = resolver._rootScopes;\n  var fallback = resolveFallback(resolver._fallback, prop, value);\n  var allScopes = [].concat(_toConsumableArray(parentScopes), _toConsumableArray(rootScopes));\n  var set = new Set();\n  set.add(value);\n  var key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n\n  if (key === null) {\n    return false;\n  }\n\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n\n    if (key === null) {\n      return false;\n    }\n  }\n\n  return _createResolver(Array.from(set), [''], rootScopes, fallback, function () {\n    return subGetTarget(resolver, prop, value);\n  });\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  var parent = resolver._getTarget();\n\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n\n  var target = parent[prop];\n\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n\n  return target;\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  var value;\n\n  var _iterator5 = _createForOfIteratorHelper(prefixes),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var prefix = _step5.value;\n      value = _resolve(readKey(prefix, prop), scopes);\n\n      if (defined(value)) {\n        return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n}\n\nfunction _resolve(key, scopes) {\n  var _iterator6 = _createForOfIteratorHelper(scopes),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var scope = _step6.value;\n\n      if (!scope) {\n        continue;\n      }\n\n      var value = scope[key];\n\n      if (defined(value)) {\n        return value;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  var keys = target._keys;\n\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  var set = new Set();\n\n  var _iterator7 = _createForOfIteratorHelper(scopes),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var scope = _step7.value;\n\n      var _iterator8 = _createForOfIteratorHelper(Object.keys(scope).filter(function (k) {\n        return !k.startsWith('_');\n      })),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var key = _step8.value;\n          set.add(key);\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  return Array.from(set);\n}\n\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var _this$_parsing$key = this._parsing.key,\n      key = _this$_parsing$key === void 0 ? 'r' : _this$_parsing$key;\n  var parsed = new Array(count);\n  var i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n\n  return parsed;\n}\n\nvar EPSILON = Number.EPSILON || 1e-14;\n\nvar getPoint = function getPoint(points, i) {\n  return i < points.length && !points[i].skip && points[i];\n};\n\nvar getValueAxis = function getValueAxis(indexAxis) {\n  return indexAxis === 'x' ? 'y' : 'x';\n};\n\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  var previous = firstPoint.skip ? middlePoint : firstPoint;\n  var current = middlePoint;\n  var next = afterPoint.skip ? middlePoint : afterPoint;\n  var d01 = distanceBetweenPoints(current, previous);\n  var d12 = distanceBetweenPoints(next, current);\n  var s01 = d01 / (d01 + d12);\n  var s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  var fa = t * s01;\n  var fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\nfunction monotoneAdjust(points, deltaK, mK) {\n  var pointsLen = points.length;\n  var alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  var pointAfter = getPoint(points, 0);\n\n  for (var i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points, mK) {\n  var indexAxis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'x';\n  var valueAxis = getValueAxis(indexAxis);\n  var pointsLen = points.length;\n  var delta, pointBefore, pointCurrent;\n  var pointAfter = getPoint(points, 0);\n\n  for (var i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n\n    if (!pointCurrent) {\n      continue;\n    }\n\n    var iPixel = pointCurrent[indexAxis];\n    var vPixel = pointCurrent[valueAxis];\n\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[\"cp1\".concat(indexAxis)] = iPixel - delta;\n      pointCurrent[\"cp1\".concat(valueAxis)] = vPixel - delta * mK[i];\n    }\n\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[\"cp2\".concat(indexAxis)] = iPixel + delta;\n      pointCurrent[\"cp2\".concat(valueAxis)] = vPixel + delta * mK[i];\n    }\n  }\n}\n\nfunction splineCurveMonotone(points) {\n  var indexAxis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n  var valueAxis = getValueAxis(indexAxis);\n  var pointsLen = points.length;\n  var deltaK = Array(pointsLen).fill(0);\n  var mK = Array(pointsLen);\n  var i, pointBefore, pointCurrent;\n  var pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      var slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n\n    mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points, area) {\n  var i, ilen, point, inArea, inAreaPrev;\n\n  var inAreaNext = _isPointInArea(points[0], area);\n\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n\n    if (!inArea) {\n      continue;\n    }\n\n    point = points[i];\n\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  var i, ilen, point, controlPoints;\n\n  if (options.spanGaps) {\n    points = points.filter(function (pt) {\n      return !pt.skip;\n    });\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    var prev = loop ? points[points.length - 1] : points[0];\n\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction _getParentNode(domNode) {\n  var parent = domNode.parentNode;\n\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n\n  return parent;\n}\n\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  var valueInPixels;\n\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nvar getComputedStyle = function getComputedStyle(element) {\n  return window.getComputedStyle(element, null);\n};\n\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nvar positions = ['top', 'right', 'bottom', 'left'];\n\nfunction getPositionedStyle(styles, style, suffix) {\n  var result = {};\n  suffix = suffix ? '-' + suffix : '';\n\n  for (var i = 0; i < 4; i++) {\n    var pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nvar useOffsetPos = function useOffsetPos(x, y, target) {\n  return (x > 0 || y > 0) && (!target || !target.shadowRoot);\n};\n\nfunction getCanvasPosition(e, canvas) {\n  var touches = e.touches;\n  var source = touches && touches.length ? touches[0] : e;\n  var offsetX = source.offsetX,\n      offsetY = source.offsetY;\n  var box = false;\n  var x, y;\n\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    var rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n\n  return {\n    x: x,\n    y: y,\n    box: box\n  };\n}\n\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n\n  var canvas = chart.canvas,\n      currentDevicePixelRatio = chart.currentDevicePixelRatio;\n  var style = getComputedStyle(canvas);\n  var borderBox = style.boxSizing === 'border-box';\n  var paddings = getPositionedStyle(style, 'padding');\n  var borders = getPositionedStyle(style, 'border', 'width');\n\n  var _getCanvasPosition = getCanvasPosition(evt, canvas),\n      x = _getCanvasPosition.x,\n      y = _getCanvasPosition.y,\n      box = _getCanvasPosition.box;\n\n  var xOffset = paddings.left + (box && borders.left);\n  var yOffset = paddings.top + (box && borders.top);\n  var width = chart.width,\n      height = chart.height;\n\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas, width, height) {\n  var maxWidth, maxHeight;\n\n  if (width === undefined || height === undefined) {\n    var container = _getParentNode(canvas);\n\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      var rect = container.getBoundingClientRect();\n      var containerStyle = getComputedStyle(container);\n      var containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      var containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nvar round1 = function round1(v) {\n  return Math.round(v * 10) / 10;\n};\n\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  var style = getComputedStyle(canvas);\n  var margins = getPositionedStyle(style, 'margin');\n  var maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  var maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  var containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  var width = containerSize.width,\n      height = containerSize.height;\n\n  if (style.boxSizing === 'content-box') {\n    var borders = getPositionedStyle(style, 'border', 'width');\n    var paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  var pixelRatio = forceRatio || 1;\n  var deviceHeight = Math.floor(chart.height * pixelRatio);\n  var deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  var canvas = chart.canvas;\n\n  if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n    canvas.style.height = \"\".concat(chart.height, \"px\");\n    canvas.style.width = \"\".concat(chart.width, \"px\");\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n\n  return false;\n}\n\nvar supportsEventListenerOptions = function () {\n  var passiveSupported = false;\n\n  try {\n    var options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {}\n\n  return passiveSupported;\n}();\n\nfunction readUsedSize(element, property) {\n  var value = getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n  };\n}\n\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  var cp1 = {\n    x: p1.cp2x,\n    y: p1.cp2y\n  };\n  var cp2 = {\n    x: p2.cp1x,\n    y: p2.cp1y\n  };\n\n  var a = _pointInLine(p1, cp1, t);\n\n  var b = _pointInLine(cp1, cp2, t);\n\n  var c = _pointInLine(cp2, p2, t);\n\n  var d = _pointInLine(a, b, t);\n\n  var e = _pointInLine(b, c, t);\n\n  return _pointInLine(d, e, t);\n}\n\nvar intlCache = new Map();\n\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  var cacheKey = locale + JSON.stringify(options);\n  var formatter = intlCache.get(cacheKey);\n\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n\n  return formatter;\n}\n\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nvar getRightToLeftAdapter = function getRightToLeftAdapter(rectX, width) {\n  return {\n    x: function x(_x) {\n      return rectX + rectX + width - _x;\n    },\n    setWidth: function setWidth(w) {\n      width = w;\n    },\n    textAlign: function textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus: function xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr: function leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    }\n  };\n};\n\nvar getLeftToRightAdapter = function getLeftToRightAdapter() {\n  return {\n    x: function x(_x2) {\n      return _x2;\n    },\n    setWidth: function setWidth(w) {},\n    textAlign: function textAlign(align) {\n      return align;\n    },\n    xPlus: function xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr: function leftForLtr(x, _itemWidth) {\n      return x;\n    }\n  };\n};\n\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nfunction overrideTextDirection(ctx, direction) {\n  var style, original;\n\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\n\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle\n    };\n  }\n\n  return {\n    between: _isBetween,\n    compare: function compare(a, b) {\n      return a - b;\n    },\n    normalize: function normalize(x) {\n      return x;\n    }\n  };\n}\n\nfunction normalizeSegment(_ref) {\n  var start = _ref.start,\n      end = _ref.end,\n      count = _ref.count,\n      loop = _ref.loop,\n      style = _ref.style;\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style: style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  var property = bounds.property,\n      startBound = bounds.start,\n      endBound = bounds.end;\n\n  var _propertyFn = propertyFn(property),\n      between = _propertyFn.between,\n      normalize = _propertyFn.normalize;\n\n  var count = points.length;\n  var start = segment.start,\n      end = segment.end,\n      loop = segment.loop;\n  var i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n\n      start--;\n      end--;\n    }\n\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n\n  return {\n    start: start,\n    end: end,\n    loop: loop,\n    style: segment.style\n  };\n}\n\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  var property = bounds.property,\n      startBound = bounds.start,\n      endBound = bounds.end;\n  var count = points.length;\n\n  var _propertyFn2 = propertyFn(property),\n      compare = _propertyFn2.compare,\n      between = _propertyFn2.between,\n      normalize = _propertyFn2.normalize;\n\n  var _getSegment = getSegment(segment, points, bounds),\n      start = _getSegment.start,\n      end = _getSegment.end,\n      loop = _getSegment.loop,\n      style = _getSegment.style;\n\n  var result = [];\n  var inside = false;\n  var subStart = null;\n  var value, point, prevValue;\n\n  var startIsBefore = function startIsBefore() {\n    return between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  };\n\n  var endIsBefore = function endIsBefore() {\n    return compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  };\n\n  var shouldStart = function shouldStart() {\n    return inside || startIsBefore();\n  };\n\n  var shouldStop = function shouldStop() {\n    return !inside || endIsBefore();\n  };\n\n  for (var i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end: i,\n        loop: loop,\n        count: count,\n        style: style\n      }));\n      subStart = null;\n    }\n\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({\n      start: subStart,\n      end: end,\n      loop: loop,\n      count: count,\n      style: style\n    }));\n  }\n\n  return result;\n}\n\nfunction _boundSegments(line, bounds) {\n  var result = [];\n  var segments = line.segments;\n\n  for (var i = 0; i < segments.length; i++) {\n    var sub = _boundSegment(segments[i], line.points, bounds);\n\n    if (sub.length) {\n      result.push.apply(result, _toConsumableArray(sub));\n    }\n  }\n\n  return result;\n}\n\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  var start = 0;\n  var end = count - 1;\n\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  start %= count;\n\n  if (loop) {\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  end %= count;\n  return {\n    start: start,\n    end: end\n  };\n}\n\nfunction solidSegments(points, start, max, loop) {\n  var count = points.length;\n  var result = [];\n  var last = start;\n  var prev = points[start];\n  var end;\n\n  for (end = start + 1; end <= max; ++end) {\n    var cur = points[end % count];\n\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({\n          start: start % count,\n          end: (end - 1) % count,\n          loop: loop\n        });\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n\n      if (prev.skip) {\n        start = end;\n      }\n    }\n\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({\n      start: start % count,\n      end: last % count,\n      loop: loop\n    });\n  }\n\n  return result;\n}\n\nfunction _computeSegments(line, segmentOptions) {\n  var points = line.points;\n  var spanGaps = line.options.spanGaps;\n  var count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  var loop = !!line._loop;\n\n  var _findStartAndEnd = findStartAndEnd(points, count, loop, spanGaps),\n      start = _findStartAndEnd.start,\n      end = _findStartAndEnd.end;\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{\n      start: start,\n      end: end,\n      loop: loop\n    }], points, segmentOptions);\n  }\n\n  var max = end < start ? end + count : end;\n  var completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  var chartContext = line._chart.getContext();\n\n  var baseStyle = readStyle(line.options);\n  var datasetIndex = line._datasetIndex,\n      spanGaps = line.options.spanGaps;\n  var count = points.length;\n  var result = [];\n  var prevStyle = baseStyle;\n  var start = segments[0].start;\n  var i = start;\n\n  function addStyle(s, e, l, st) {\n    var dir = spanGaps ? -1 : 1;\n\n    if (s === e) {\n      return;\n    }\n\n    s += count;\n\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n\n    while (points[e % count].skip) {\n      e += dir;\n    }\n\n    if (s % count !== e % count) {\n      result.push({\n        start: s % count,\n        end: e % count,\n        loop: l,\n        style: st\n      });\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  var _iterator9 = _createForOfIteratorHelper(segments),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var segment = _step9.value;\n      start = spanGaps ? start : segment.start;\n      var prev = points[start % count];\n      var style = void 0;\n\n      for (i = start + 1; i <= segment.end; i++) {\n        var pt = points[i % count];\n        style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n          type: 'segment',\n          p0: prev,\n          p1: pt,\n          p0DataIndex: (i - 1) % count,\n          p1DataIndex: i % count,\n          datasetIndex: datasetIndex\n        })));\n\n        if (styleChanged(style, prevStyle)) {\n          addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n\n        prev = pt;\n        prevStyle = style;\n      }\n\n      if (start < i - 1) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { toFont as $, _rlookupByKey as A, _isPointInArea as B, getAngleFromPoint as C, toPadding as D, each as E, getMaximumSize as F, _getParentNode as G, HALF_PI as H, readUsedSize as I, throttled as J, supportsEventListenerOptions as K, _isDomSupported as L, log10 as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, toDegrees as S, TAU as T, _measureText as U, _int16Range as V, _alignPixel as W, clipArea as X, renderText as Y, unclipArea as Z, _arrayUnique as _, resolve as a, QUARTER_PI as a$, _toLeftRightCenter as a0, _alignStartEnd as a1, overrides as a2, merge as a3, _capitalize as a4, descriptors as a5, isFunction as a6, _attachContext as a7, _createResolver as a8, _descriptors as a9, _textX as aA, restoreTextDirection as aB, noop as aC, distanceBetweenPoints as aD, _setMinAndMaxByKey as aE, niceNum as aF, almostWhole as aG, almostEquals as aH, _decimalPlaces as aI, _longestText as aJ, _filterBetween as aK, _lookup as aL, isPatternOrGradient as aM, getHoverColor as aN, clone$1 as aO, _merger as aP, _mergerIf as aQ, _deprecated as aR, toFontString as aS, splineCurve as aT, splineCurveMonotone as aU, getStyle as aV, fontString as aW, toLineHeight as aX, PITAU as aY, INFINITY as aZ, RAD_PER_DEG as a_, mergeIf as aa, uid as ab, debounce as ac, retinaScale as ad, clearCanvas as ae, setsEqual as af, _elementsEqual as ag, _isClickEvent as ah, _isBetween as ai, _readValueToProps as aj, _updateBezierControlPoints as ak, _computeSegments as al, _boundSegments as am, _steppedInterpolation as an, _bezierInterpolation as ao, _pointInLine as ap, _steppedLineTo as aq, _bezierCurveTo as ar, drawPoint as as, addRoundedRectPath as at, toTRBL as au, toTRBLCorners as av, _boundSegment as aw, _normalizeAngle as ax, getRtlAdapter as ay, overrideTextDirection as az, isArray as b, TWO_THIRDS_PI as b0, _angleDiff as b1, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, _parseObjectDataRadialScale as y, getRelativePosition as z };","import _objectSpread from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _assertThisInitialized from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as _getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n\n      if (this._request) {\n        return;\n      }\n\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n\n        _this._request = null;\n\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          _this2._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          _this2._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      this._lastDate = date;\n\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n\n  return Animator;\n}();\n\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n\n    var c1 = c0.valid && _color(to || transparent);\n\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n\n      if (!this._active) {\n        this._target[prop] = to;\n\n        this._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\n\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n\n  return Animations;\n}();\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator2 = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  var _iterator3 = _createForOfIteratorHelper(items),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\n\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n\n      this._dataCheck();\n\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n\n      this._dataCheck();\n\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      this._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n          data = this._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = this._getOtherScale(scale);\n\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, parsed;\n\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.hidden) {\n          continue;\n        }\n\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n\n      var _iterator4 = _createForOfIteratorHelper(this._syncList),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 3),\n              method = _step4$value[0],\n              arg1 = _step4$value[1],\n              arg2 = _step4$value[2];\n\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        this.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n\n      this.parse(start, count);\n\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n            method = _args2[0],\n            arg1 = _args2[1],\n            arg2 = _args2[2];\n\n        this[method](arg1, arg2);\n      }\n\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n\n      var newCount = arguments.length - 2;\n\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n\n  return DatasetController;\n}();\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  var _borderProps = borderProps(properties),\n      start = _borderProps.start,\n      end = _borderProps.end,\n      reverse = _borderProps.reverse,\n      top = _borderProps.top,\n      bottom = _borderProps.bottom;\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n\n  function BarController() {\n    _classCallCheck(this, BarController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BarController).apply(this, arguments));\n  }\n\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n          vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = this._getRuler();\n\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n\n        if (item.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n          vScale = _this$_cachedMeta.vScale,\n          _stacked = _this$_cachedMeta._stacked,\n          _this$options = this.options,\n          baseValue = _this$options.base,\n          minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n\n  return BarController;\n}(DatasetController);\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BubbleController).apply(this, arguments));\n  }\n\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n          iScale = _this$_cachedMeta2.iScale,\n          vScale = _this$_cachedMeta2.vScale;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        this.updateElement(point, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n\n  return BubbleController;\n}(DatasetController);\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n\n    _classCallCheck(this, DoughnutController);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(DoughnutController).call(this, chart, datasetIndex));\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n              key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n\n        var i, ilen;\n\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n      var chartWeight = this._getRingWeight(this.index);\n\n      var _this$_getRotationExt = this._getRotationExtents(),\n          circumference = _this$_getRotationExt.circumference,\n          rotation = _this$_getRotationExt.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n\n      var circumference = this._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n\n      var startAngle = this._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n\n  return DoughnutController;\n}(DatasetController);\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n\n  function LineController() {\n    _classCallCheck(this, LineController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LineController).apply(this, arguments));\n  }\n\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n          iScale = _this$_cachedMeta3.iScale,\n          vScale = _this$_cachedMeta3.vScale,\n          _stacked = _this$_cachedMeta3._stacked,\n          _dataset = _this$_cachedMeta3._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n          spanGaps = _this$options2.spanGaps,\n          segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n\n  return LineController;\n}(DatasetController);\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n        _parsed = meta._parsed;\n    var axis = iScale.axis;\n\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n        min = _iScale$getUserBounds.min,\n        max = _iScale$getUserBounds.max,\n        minDefined = _iScale$getUserBounds.minDefined,\n        maxDefined = _iScale$getUserBounds.maxDefined;\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n      yScale = meta.yScale,\n      _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n\n    _classCallCheck(this, PolarAreaController);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(PolarAreaController).call(this, chart, datasetIndex));\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n\n  return PolarAreaController;\n}(DatasetController);\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n\n  function PieController() {\n    _classCallCheck(this, PieController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PieController).apply(this, arguments));\n  }\n\n  return PieController;\n}(DoughnutController);\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RadarController).apply(this, arguments));\n  }\n\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n\n  return RadarController;\n}(DatasetController);\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScatterController).apply(this, arguments));\n  }\n\n  return ScatterController;\n}(LineController);\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n\n    this.options = options || {};\n  }\n\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n\n  return DateAdapter;\n}();\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n        _index2 = _metasets$i.index,\n        data = _metasets$i.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n        startAngle = _element$getProps.startAngle,\n        endAngle = _element$getProps.endAngle;\n\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    }),\n        angle = _getAngleFromPoint.angle;\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  var stacks = {};\n\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n          pos = wrap.pos,\n          stackWeight = wrap.stackWeight;\n\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n      hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n      box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n      y = chartArea.y;\n\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n\n        var _width = stack.size || box.width;\n\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\n\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n\n  return BasePlatform;\n}();\n\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BasicPlatform).apply(this, arguments));\n  }\n\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n\n  return BasicPlatform;\n}(BasePlatform);\n\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition = getRelativePosition(event, chart),\n      x = _getRelativePosition.x,\n      y = _getRelativePosition.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator7 = _createForOfIteratorHelper(nodeList),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var node = _step7.value;\n\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n\n    var _iterator8 = _createForOfIteratorHelper(entries),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n\n    var _iterator9 = _createForOfIteratorHelper(entries),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DomPlatform).apply(this, arguments));\n  }\n\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n\n      return !!(container && container.isConnected);\n    }\n  }]);\n\n  return DomPlatform;\n}(BasePlatform);\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        return this;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n\n  return Element;\n}();\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = _factorize(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right,\n      chart = scale.chart;\n  var chartArea = chart.chartArea,\n      scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n\n  function Scale(cfg) {\n    var _this9;\n\n    _classCallCheck(this, Scale);\n\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(Scale).call(this));\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n          min = _this$getUserBounds.min,\n          max = _this$getUserBounds.max,\n          minDefined = _this$getUserBounds.minDefined,\n          maxDefined = _this$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options3 = this.options,\n          beginAtZero = _this$options3.beginAtZero,\n          grace = _this$options3.grace,\n          tickOpts = _this$options3.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n          _this$options4 = this.options,\n          tickOpts = _this$options4.ticks,\n          titleOpts = _this$options4.title,\n          gridOpts = _this$options4.grid;\n\n      var display = this._isVisible();\n\n      var isHorizontal = this.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n              first = _this$_getLabelSizes.first,\n              last = _this$_getLabelSizes.last,\n              widest = _this$_getLabelSizes.widest,\n              highest = _this$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      this._handleMargins();\n\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options5 = this.options,\n          _this$options5$ticks = _this$options5.ticks,\n          align = _this$options5$ticks.align,\n          padding = _this$options5$ticks.padding,\n          position = _this$options5.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options6 = this.options,\n          axis = _this$options6.axis,\n          position = _this$options6.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = this._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n          position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(this.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        var backdrop = void 0;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: tickTextAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options7 = this.options,\n          position = _this$options7.position,\n          ticks = _this$options7.ticks;\n      var rotation = -toRadians(this.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options8 = this.options,\n          position = _this$options8.position,\n          _this$options8$ticks = _this$options8.ticks,\n          crossAlign = _this$options8$ticks.crossAlign,\n          mirror = _this$options8$ticks.mirror,\n          padding = _this$options8$ticks.padding;\n\n      var labelSizes = this._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = this.chart;\n      var position = this.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n          ctx = this.ctx,\n          grid = this.options.grid;\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = this.ctx;\n\n      var area = this._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n      var i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options9 = this.options,\n          position = _this$options9.position,\n          title = _this$options9.title,\n          reverse = _this$options9.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n\n          _this10.drawGrid(chartArea);\n\n          _this10.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n\n  return Scale;\n}(Element);\n\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n\n  return Registry;\n}();\n\nvar registry = new Registry();\n\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n\n    this._init = [];\n  }\n\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n\n        this._notify(this._init, chart, 'install');\n      }\n\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n      var result = this._notify(descriptors, chart, hook, args);\n\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n\n        this._notify(this._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      var _iterator10 = _createForOfIteratorHelper(descriptors),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var descriptor = _step10.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  _createClass(Config, [{\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      var _iterator11 = _createForOfIteratorHelper(names),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var prop = _step11.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }, {\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }]);\n\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iterator12 = _createForOfIteratorHelper(names),\n      _step12;\n\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var prop = _step12.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n\n  return false;\n}\n\nvar version = \"3.8.0\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n\n  for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {\n    var key = _keys[_i2];\n    var intKey = +key;\n\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n\n    _classCallCheck(this, Chart);\n\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  _createClass(Chart, [{\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n\n      var metasets = this._metasets,\n          datasets = this.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n\n      this._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n\n          meta = this.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      this._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n\n      this._updateScales();\n\n      this._checkEventBindings();\n\n      this._updateHiddenIndices();\n\n      this._plugins.invalidate();\n\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n            controller = _this$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n      this._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      this._updateDatasets(mode);\n\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      this._layers.sort(compare2Level('z', '_idx'));\n\n      var _active = this._active,\n          _lastEvent = this._lastEvent;\n\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n\n      var _iterator13 = _createForOfIteratorHelper(changes),\n          _step13;\n\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var _step13$value = _step13.value,\n              method = _step13$value.method,\n              start = _step13$value.start,\n              count = _step13$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n\n      var changeSet = makeSet(0);\n\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n\n      for (var _i3 = 0, _ilen = this.data.datasets.length; _i3 < _ilen; ++_i3) {\n        this._updateDataset(_i3, isFunction(mode) ? mode({\n          datasetIndex: _i3\n        }) : mode);\n      }\n\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n            width = _this$_resizeBeforeDr.width,\n            height = _this$_resizeBeforeDr.height;\n\n        this._resize(width, height);\n\n        this._resizeBeforeDraw = null;\n      }\n\n      this.clear();\n\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = this._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = this.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n\n      meta.controller.draw();\n\n      if (useClip) {\n        unclipArea(ctx);\n      }\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n          ctx = this.ctx;\n\n      this._stop();\n\n      this.config.clearCache();\n\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n\n      var listeners = this._listeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        _this18._eventHandler(e);\n      };\n\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n\n      var detached;\n\n      var attached = function attached() {\n        _remove('attach', attached);\n\n        _this19.attached = true;\n\n        _this19.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = function detached() {\n        _this19.attached = false;\n\n        _remove('resize', listener);\n\n        _this19._stop();\n\n        _this19._resize(0, 0);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref2) {\n        var datasetIndex = _ref2.datasetIndex,\n            index = _ref2.index;\n\n        var meta = _this21.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        this.render();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n          lastActive = _this$_active === void 0 ? [] : _this$_active,\n          options = this.options;\n      var useFinalPosition = replay;\n\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n      var isClick = _isClickEvent(e);\n\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }, {\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options10 = this.options,\n          aspectRatio = _this$options10.aspectRatio,\n          maintainAspectRatio = _this$options10.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }]);\n\n  return Chart;\n}();\n\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\n\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  var x = element.x,\n      y = element.y,\n      start = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference;\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n      y = element.y,\n      startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  var options = element.options;\n  var borderWidth = options.borderWidth,\n      borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n\n  function ArcElement(cfg) {\n    var _this23;\n\n    _classCallCheck(this, ArcElement);\n\n    _this23 = _possibleConstructorReturn(this, _getPrototypeOf(ArcElement).call(this));\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_assertThisInitialized(_this23)), cfg);\n    }\n\n    return _this23;\n  }\n\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint2.angle,\n          distance = _getAngleFromPoint2.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var rAdjust = this.options.spacing / 2;\n\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var _this$options11 = this.options,\n          offset = _this$options11.offset,\n          spacing = _this$options11.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n          circumference = this.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      var radiusOffset = 0;\n\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, this, radiusOffset, spacing);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n  }]);\n\n  return ArcElement;\n}(Element);\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref3 = params || {},\n      _ref3$move = _ref3.move,\n      move = _ref3$move === void 0 ? true : _ref3$move,\n      reverse = _ref3.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref4 = params || {},\n      _ref4$move = _ref4.move,\n      move = _ref4$move === void 0 ? true : _ref4$move,\n      reverse = _ref4.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iterator14 = _createForOfIteratorHelper(segments),\n      _step14;\n\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var segment = _step14.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n\n  function LineElement(cfg) {\n    var _this24;\n\n    _classCallCheck(this, LineElement);\n\n    _this24 = _possibleConstructorReturn(this, _getPrototypeOf(LineElement).call(this));\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_assertThisInitialized(_this24)), cfg);\n    }\n\n    return _this24;\n  }\n\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n\n      var segmentMethod = _getSegmentMethod(this);\n\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n\n      var _iterator15 = _createForOfIteratorHelper(segments),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var segment = _step15.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n\n      if (points.length && options.borderWidth) {\n        ctx.save();\n\n        _draw(ctx, this, start, count);\n\n        ctx.restore();\n      }\n\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }, {\n    key: \"points\",\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    },\n    get: function get() {\n      return this._points;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }]);\n\n  return LineElement;\n}(Element);\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n\n  function PointElement(cfg) {\n    var _this25;\n\n    _classCallCheck(this, PointElement);\n\n    _this25 = _possibleConstructorReturn(this, _getPrototypeOf(PointElement).call(this));\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_assertThisInitialized(_this25)), cfg);\n    }\n\n    return _this25;\n  }\n\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n\n  return PointElement;\n}(Element);\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n      enableBorderRadius = _bar$getProps2.enableBorderRadius;\n\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n\n  function BarElement(cfg) {\n    var _this26;\n\n    _classCallCheck(this, BarElement);\n\n    _this26 = _possibleConstructorReturn(this, _getPrototypeOf(BarElement).call(this));\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_assertThisInitialized(_this26)), cfg);\n    }\n\n    return _this26;\n  }\n\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n          _this$options12 = this.options,\n          borderColor = _this$options12.borderColor,\n          backgroundColor = _this$options12.backgroundColor;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n\n  return BarElement;\n}(Element);\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex1], {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex2], {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n      min = _iScale$getUserBounds2.min,\n      max = _iScale$getUserBounds2.max,\n      minDefined = _iScale$getUserBounds2.minDefined,\n      maxDefined = _iScale$getUserBounds2.maxDefined;\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      var threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n\n  var _iterator16 = _createForOfIteratorHelper(segments),\n      _step16;\n\n  try {\n    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n      var segment = _step16.value;\n      var start = segment.start,\n          end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      var targetSegments = _boundSegments(target, bounds);\n\n      var _iterator17 = _createForOfIteratorHelper(targetSegments),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var tgt = _step17.value;\n\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = _boundSegment(segment, points, subBounds);\n\n          var _iterator18 = _createForOfIteratorHelper(fillSources),\n              _step18;\n\n          try {\n            for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n              var fillSource = _step18.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator18.e(err);\n          } finally {\n            _iterator18.f();\n          }\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    }\n  } catch (err) {\n    _iterator16.e(err);\n  } finally {\n    _iterator16.f();\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  var _ref5 = boundary || {},\n      _ref5$x = _ref5.x,\n      x = _ref5$x === void 0 ? null : _ref5$x,\n      _ref5$y = _ref5.y,\n      y = _ref5$y === void 0 ? null : _ref5$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref6) {\n    var start = _ref6.start,\n        end = _ref6.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n\n  return simpleArc;\n}();\n\nfunction _getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n\n  var pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n\n  var value = _getTargetValue(fill, scale, start);\n\n  var target = [];\n\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n\n  var line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref7 = fillOption || {},\n      _ref7$above = _ref7.above,\n      above = _ref7$above === void 0 ? color : _ref7$above,\n      _ref7$below = _ref7.below,\n      below = _ref7$below === void 0 ? color : _ref7$below;\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n      points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n\n  var _iterator19 = _createForOfIteratorHelper(segments),\n      _step19;\n\n  try {\n    for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n      var segment = _step19.value;\n      var start = segment.start,\n          end = segment.end;\n      var firstPoint = points[start];\n\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator19.e(err);\n  } finally {\n    _iterator19.f();\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale;\n\n  var segments = _segments(line, target, property);\n\n  var _iterator20 = _createForOfIteratorHelper(segments),\n      _step20;\n\n  try {\n    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n      var _step20$value = _step20.value,\n          src = _step20$value.source,\n          tgt = _step20$value.target,\n          start = _step20$value.start,\n          end = _step20$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator20.e(err);\n  } finally {\n    _iterator20.f();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n      top = _scale$chart$chartAre.top,\n      bottom = _scale$chart$chartAre.bottom;\n\n  var _ref8 = bounds || {},\n      property = _ref8.property,\n      start = _ref8.start,\n      end = _ref8.end;\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    var metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n\n  function Legend(config) {\n    var _this27;\n\n    _classCallCheck(this, Legend);\n\n    _this27 = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this));\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n          ctx = this.ctx;\n\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = this._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n          maxWidth = this.maxWidth,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n          maxHeight = this.maxHeight,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n\n      var titleHeight = this._computeTitleHeight();\n\n      var hitboxes = this.legendHitBoxes,\n          _this$options13 = this.options,\n          align = _this$options13.align,\n          padding = _this$options13.labels.padding,\n          rtl = _this$options13.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n      if (this.isHorizontal()) {\n        var row = 0;\n\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n        var _iterator21 = _createForOfIteratorHelper(hitboxes),\n            _step21;\n\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var hitbox = _step21.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n      } else {\n        var col = 0;\n\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n        var _iterator22 = _createForOfIteratorHelper(hitboxes),\n            _step22;\n\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var _hitbox = _step22.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n\n        this._draw();\n\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n\n      var opts = this.options,\n          columnSizes = this.columnSizes,\n          lineWidths = this.lineWidths,\n          ctx = this.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n          padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      var isHorizontal = this.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n\n      var x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n\n        this._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n\n  return Legend;\n}(Element);\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\n\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n\n  function Title(config) {\n    var _this30;\n\n    _classCallCheck(this, Title);\n\n    _this30 = _possibleConstructorReturn(this, _getPrototypeOf(Title).call(this));\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n\n      var _this$_drawArgs = this._drawArgs(offset),\n          titleX = _this$_drawArgs.titleX,\n          titleY = _this$_drawArgs.titleY,\n          maxWidth = _this$_drawArgs.maxWidth,\n          rotation = _this$_drawArgs.rotation;\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n      topLeft = _toTRBLCorners.topLeft,\n      topRight = _toTRBLCorners.topRight,\n      bottomLeft = _toTRBLCorners.bottomLeft,\n      bottomRight = _toTRBLCorners.bottomRight;\n\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n\n  function Tooltip(config) {\n    var _this31;\n\n    _classCallCheck(this, Tooltip);\n\n    _this31 = _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).call(this));\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart || config._chart;\n    _this31._chart = _this31.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      var title = callbacks.title.apply(this, [context]);\n      var afterTitle = callbacks.afterTitle.apply(this, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(_this32, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(_this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(_this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      var footer = callbacks.footer.apply(this, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(_this33, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(_this33, context));\n        labelTextColors.push(scoped.labelTextColor.call(_this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n          cornerRadius = options.cornerRadius;\n\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n          topLeft = _toTRBLCorners2.topLeft,\n          topRight = _toTRBLCorners2.topRight,\n          bottomLeft = _toTRBLCorners2.bottomLeft,\n          bottomRight = _toTRBLCorners2.bottomRight;\n\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth,\n          boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth,\n          boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n          topLeft = _toTRBLCorners3.topLeft,\n          topRight = _toTRBLCorners3.topRight,\n          bottomLeft = _toTRBLCorners3.bottomLeft,\n          bottomRight = _toTRBLCorners3.bottomRight;\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      this._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref9) {\n        var datasetIndex = _ref9.datasetIndex,\n            index = _ref9.index;\n\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n\n      var positionChanged = this._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n      var positionChanged = this._positionChanged(active, e);\n\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        this._active = active;\n\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n\n  return Tooltip;\n}(Element);\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        var label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        var value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\n\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n\n  function CategoryScale(cfg) {\n    var _this35;\n\n    _classCallCheck(this, CategoryScale);\n\n    _this35 = _possibleConstructorReturn(this, _getPrototypeOf(CategoryScale).call(this, cfg));\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    _this35._addedLabels = [];\n    return _this35;\n  }\n\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n\n      if (added.length) {\n        var labels = this.getLabels();\n\n        var _iterator23 = _createForOfIteratorHelper(added),\n            _step23;\n\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var _step23$value = _step23.value,\n                _index3 = _step23$value.index,\n                label = _step23$value.label;\n\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n\n        this._addedLabels = [];\n      }\n\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n          minDefined = _this$getUserBounds2.minDefined,\n          maxDefined = _this$getUserBounds2.maxDefined;\n\n      var _this$getMinMax = this.getMinMax(true),\n          min = _this$getMinMax.min,\n          max = _this$getMinMax.max;\n\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var labels = this.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n\n  return CategoryScale;\n}(Scale);\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n      step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks,\n      maxDigits = generationOptions.maxDigits,\n      includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref10) {\n  var horizontal = _ref10.horizontal,\n      minRotation = _ref10.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n\n  function LinearScaleBase(cfg) {\n    var _this36;\n\n    _classCallCheck(this, LinearScaleBase);\n\n    _this36 = _possibleConstructorReturn(this, _getPrototypeOf(LinearScaleBase).call(this, cfg));\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._endValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n\n      var _this$getUserBounds3 = this.getUserBounds(),\n          minDefined = _this$getUserBounds3.minDefined,\n          maxDefined = _this$getUserBounds3.maxDefined;\n\n      var min = this.min,\n          max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        var offset = 1;\n\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n\n        setMax(max + offset);\n\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LinearScale).apply(this, arguments));\n  }\n\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n          min = _this$getMinMax2.min,\n          max = _this$getMinMax2.max;\n\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      var tickFont = this._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n\n  return LinearScale;\n}(LinearScaleBase);\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n\n  function LogarithmicScale(cfg) {\n    var _this37;\n\n    _classCallCheck(this, LogarithmicScale);\n\n    _this37 = _possibleConstructorReturn(this, _getPrototypeOf(LogarithmicScale).call(this, cfg));\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n          min = _this$getMinMax3.min,\n          max = _this$getMinMax3.max;\n\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n          minDefined = _this$getUserBounds4.minDefined,\n          maxDefined = _this$getUserBounds4.maxDefined;\n\n      var min = this.min;\n      var max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n\n  return LogarithmicScale;\n}(Scale);\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n        x = _scale$_pointLabelIte.x,\n        y = _scale$_pointLabelIte.y,\n        textAlign = _scale$_pointLabelIte.textAlign,\n        left = _scale$_pointLabelIte.left,\n        top = _scale$_pointLabelIte.top,\n        right = _scale$_pointLabelIte.right,\n        bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n\n    if (!isNullOrUndef(backdropColor)) {\n      var borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      var backdropLeft = left - padding.left;\n      var backdropTop = top - padding.top;\n      var backdropWidth = right - left + padding.width;\n      var backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(function (v) {\n        return v !== 0;\n      })) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\n\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n\n  function RadialLinearScale(cfg) {\n    var _this38;\n\n    _classCallCheck(this, RadialLinearScale);\n\n    _this38 = _possibleConstructorReturn(this, _getPrototypeOf(RadialLinearScale).call(this, cfg));\n    _this38.xCenter = undefined;\n    _this38.yCenter = undefined;\n    _this38.drawingArea = undefined;\n    _this38._pointLabels = [];\n    _this38._pointLabelItems = [];\n    return _this38;\n  }\n\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n          min = _this$getMinMax4.min,\n          max = _this$getMinMax4.max;\n\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this39 = this;\n\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this39.options.pointLabels.callback, [value, index], _this39);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this39.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options14 = this.options,\n          backgroundColor = _this$options14.backgroundColor,\n          circular = _this$options14.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this40 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this40.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(_this40.getContext(index - 1));\n            drawRadiusLine(_this40, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this41 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(_this41.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this41.getDistanceFromCenterForValue(_this41.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n\n  return RadialLinearScale;\n}(LinearScaleBase);\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n      parser = _scale$_parseOpts.parser,\n      round = _scale$_parseOpts.round,\n      isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n\n  function TimeScale(props) {\n    var _this42;\n\n    _classCallCheck(this, TimeScale);\n\n    _this42 = _possibleConstructorReturn(this, _getPrototypeOf(TimeScale).call(this, props));\n    _this42._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this42._unit = 'day';\n    _this42._majorUnit = undefined;\n    _this42._offsets = {};\n    _this42._normalized = false;\n    _this42._parseOpts = undefined;\n    return _this42;\n  }\n\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _this$getUserBounds5 = this.getUserBounds(),\n          min = _this$getUserBounds5.min,\n          max = _this$getUserBounds5.max,\n          minDefined = _this$getUserBounds5.minDefined,\n          maxDefined = _this$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = this.min;\n      var max = this.max;\n\n      var ticks = _filterBetween(timestamps, min, max);\n\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n\n      var label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n      var size = this._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = this.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n\n  return TimeScale;\n}(Scale);\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n\n  function TimeSeriesScale(props) {\n    var _this43;\n\n    _classCallCheck(this, TimeSeriesScale);\n\n    _this43 = _possibleConstructorReturn(this, _getPrototypeOf(TimeSeriesScale).call(this, props));\n    _this43._table = [];\n    _this43._minPos = undefined;\n    _this43._tableRange = undefined;\n    return _this43;\n  }\n\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n          max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n\n  return TimeSeriesScale;\n}(TimeScale);\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _objectWithoutProperties from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/1000code/Desktop/branch.cloudexpress.com/node_modules/.pnpm/@babel+runtime@7.3.1/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\nvar defaultDatasetIdKey = 'label';\n\nfunction reforwardRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nfunction setOptions(chart, nextOptions) {\n  chart.options = _objectSpread({}, nextOptions);\n}\n\nfunction setLabels(currentData, nextLabels) {\n  currentData.labels = nextLabels;\n}\n\nfunction setDatasets(currentData, nextDatasets) {\n  var datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n  var addedDatasets = [];\n  currentData.datasets = nextDatasets.map(function (nextDataset) {\n    // given the new set, find it's current match\n    var currentDataset = currentData.datasets.find(function (dataset) {\n      return dataset[datasetIdKey] === nextDataset[datasetIdKey];\n    }); // There is no original to update, so simply add new one\n\n    if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n      return _objectSpread({}, nextDataset);\n    }\n\n    addedDatasets.push(currentDataset);\n    Object.assign(currentDataset, nextDataset);\n    return currentDataset;\n  });\n}\n\nfunction cloneData(data) {\n  var datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n  var nextData = {\n    labels: [],\n    datasets: []\n  };\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n  return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\n\n\nfunction getDatasetAtEvent(chart, event) {\n  return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n    intersect: true\n  }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\n\n\nfunction getElementAtEvent(chart, event) {\n  return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n    intersect: true\n  }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\n\n\nfunction getElementsAtEvent(chart, event) {\n  return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n    intersect: true\n  }, false);\n}\n\nfunction ChartComponent(param, ref) {\n  var _param$height = param.height,\n      height = _param$height === void 0 ? 150 : _param$height,\n      _param$width = param.width,\n      width = _param$width === void 0 ? 300 : _param$width,\n      _param$redraw = param.redraw,\n      redraw = _param$redraw === void 0 ? false : _param$redraw,\n      datasetIdKey = param.datasetIdKey,\n      type = param.type,\n      data = param.data,\n      options = param.options,\n      _param$plugins = param.plugins,\n      plugins = _param$plugins === void 0 ? [] : _param$plugins,\n      fallbackContent = param.fallbackContent,\n      updateMode = param.updateMode,\n      props = _objectWithoutProperties(param, [\"height\", \"width\", \"redraw\", \"datasetIdKey\", \"type\", \"data\", \"options\", \"plugins\", \"fallbackContent\", \"updateMode\"]);\n\n  var canvasRef = useRef(null);\n  var chartRef = useRef();\n\n  var renderChart = function renderChart() {\n    if (!canvasRef.current) return;\n    chartRef.current = new Chart$1(canvasRef.current, {\n      type: type,\n      data: cloneData(data, datasetIdKey),\n      options: options,\n      plugins: plugins\n    });\n    reforwardRef(ref, chartRef.current);\n  };\n\n  var destroyChart = function destroyChart() {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(function () {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n  useEffect(function () {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n  useEffect(function () {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n  useEffect(function () {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n  useEffect(function () {\n    renderChart();\n    return function () {\n      return destroyChart();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef,\n    role: \"img\",\n    height: height,\n    width: width\n  }, props), fallbackContent);\n}\n\nvar Chart = /*#__PURE__*/forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n  Chart$1.register(registerables);\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Chart, Object.assign({}, props, {\n      ref: ref,\n      type: type\n    }));\n  });\n}\n\nvar Line = /* #__PURE__ */createTypedChart('line', LineController);\nvar Bar = /* #__PURE__ */createTypedChart('bar', BarController);\nvar Radar = /* #__PURE__ */createTypedChart('radar', RadarController);\nvar Doughnut = /* #__PURE__ */createTypedChart('doughnut', DoughnutController);\nvar PolarArea = /* #__PURE__ */createTypedChart('polarArea', PolarAreaController);\nvar Bubble = /* #__PURE__ */createTypedChart('bubble', BubbleController);\nvar Pie = /* #__PURE__ */createTypedChart('pie', PieController);\nvar Scatter = /* #__PURE__ */createTypedChart('scatter', ScatterController);\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };"],"sourceRoot":""}