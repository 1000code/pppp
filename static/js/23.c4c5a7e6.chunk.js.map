{"version":3,"sources":["Functions/Dividends.js","API/PercentCOD.js","Pages/Report/Dividends.jsx"],"names":["exports","totalCOD","COD","percentage","currency_cod","arrayCOD","zum","money","map","item","val","cod_lak","price","currency","percent_branch","push","cod_thb","cod_usd","shippingCost","allParcel","tracking","branch_code","branch","totalAll","totalStart","totalEnd","total_warehouse","percent_receive","dividends_join","receive","percent_delivery","delivery","percent_warehouse","warehouse","branch_start","shipping_cost","branch_end","warehouse_now","status_parcel","serial_parcel","cancel_parcel","totalWarehouse","totalBranch","getAllPercentage","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","auth_token","wrap","_context","prev","next","axios","get","process","headers","Content-Type","abrupt","sent","stop","_x","apply","this","arguments","Dividends","user","useSelector","state","objectSpread","token","_useState","useState","_useState2","slicedToArray","setBranch","_useState3","_useState4","percentCOD","setPercentCOD","_useState5","_useState6","shipping","setShipping","_useState7","_useState8","setCOD","_useState9","_useState10","setPercentWarehouse","_useState11","_useState12","_useState13","_useState14","setTracking","_useState15","_useState16","showResult","_useState17","Date","_useState18","dateStart","setDateStart","_useState19","_useState20","dateEnd","setDateEnd","_useState21","date_start","date_end","_useState22","search","setSearch","useEffect","LoadTotalDividends","LoadPercentCOD","getTotalDividendsABranch","then","res","data","dividends_warehouse","length","parcel_join","total","catch","err","console","log","Alert","error","response","result","_result","dateFormat","date","d","month","getMonth","day","getDate","year","getFullYear","join","dateFormatAux","checkBranch","react_default","a","createElement","Fragment","className","react_datepicker_min_default","selected","onChange","handleDateStart","showTimeSelect","placeholderText","maxDate","handleDateEnd","name","toLocaleString"],"mappings":"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","file":"static/js/23.c4c5a7e6.chunk.js","sourcesContent":["exports.totalCOD = (COD, percentage, currency_cod) => {\n  let arrayCOD = [];\n  let zum = 0;\n  let money = 0;\n\n  currency_cod === \"lak\" &&\n    COD.map((item) => {\n      if (item.currency_cod === \"lak\") {\n        percentage.map((val) => {\n          if (item.cod_lak >= val.price && currency_cod === val.currency) {\n            money = (item.cod_lak * val.percent_branch) / 100;\n          }\n        });\n        arrayCOD.push(money);\n      }\n    });\n\n  currency_cod === \"thb\" &&\n    COD.map((item) => {\n      if (item.currency_cod === \"thb\") {\n        percentage.map((val) => {\n          if (item.cod_thb >= val.price && currency_cod === val.currency) {\n            money = (item.cod_thb * val.percent_branch) / 100;\n          }\n        });\n        arrayCOD.push(money);\n      }\n    });\n\n  currency_cod === \"usd\" &&\n    COD.map((item) => {\n      if (item.currency_cod === \"usd\") {\n        percentage.map((val) => {\n          if (item.cod_usd >= val.price && currency_cod === val.currency) {\n            money = (item.cod_usd * val.percent_branch) / 100;\n          }\n        });\n        arrayCOD.push(money);\n      }\n    });\n\n  arrayCOD.map((item) => {\n    zum = zum + item;\n  });\n\n  zum === 0 && (zum = \"-\");\n  return zum;\n};\n\nexports.shippingCost = (allParcel, tracking, branch_code, branch) => {\n  let totalAll = 0;\n  let totalStart = 0;\n  let totalEnd = 0;\n  let total_warehouse = 0;\n\n  const percent_receive = branch.dividends_join[0].receive;\n  const percent_delivery = branch.dividends_join[0].delivery;\n  const percent_warehouse = branch.dividends_join[0].warehouse;\n\n  allParcel.map((item) => {\n    if (item.branch_start === branch_code) {\n      totalStart = totalStart + item.shipping_cost;\n    }\n    if (\n      item.branch_end === branch_code &&\n      item.warehouse_now === branch_code &&\n      item.status_parcel === \"success\"\n    ) {\n      totalEnd = totalEnd + item.shipping_cost;\n    }\n  });\n\n  tracking.map((val) => {\n    allParcel.map((item) => {\n      if (\n        val.serial_parcel === item.serial_parcel &&\n        val.cancel_parcel === false\n      ) {\n        total_warehouse = total_warehouse + item.shipping_cost;\n      }\n    });\n  });\n\n  let totalWarehouse = (total_warehouse * percent_warehouse) / 100;\n  let totalS = (totalStart * percent_receive) / 100;\n  let totalE = (totalEnd * percent_delivery) / 100;\n  let totalBranch = totalS + totalE;\n\n  totalAll = totalBranch + totalWarehouse;\n\n  totalAll === 0 && (totalAll = \"-\");\n  totalWarehouse === 0 && (totalWarehouse = \"-\");\n  totalBranch === 0 && (totalBranch = \"-\");\n\n  return { totalBranch, totalWarehouse, totalAll };\n};\n","import axios from \"axios\";\n\nexport const getAllPercentage = async (auth_token) => {\n  return await axios.get(process.env.REACT_APP_API_PATH + \"/percentage\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      auth_token,\n    },\n  });\n};\n","import React, { useEffect, useState } from \"react\";\nimport Alert from \"../../Components/Alert\";\nimport { useSelector } from \"react-redux\";\nimport { getTotalDividendsABranch } from \"../../API/Parcel\";\n\nimport DatePicker from \"react-datepicker\";\nimport { getAllPercentage } from \"../../API/PercentCOD\";\nimport { shippingCost, totalCOD } from \"../../Functions/Dividends\";\n\nconst Dividends = () => {\n  const { user } = useSelector((state) => ({ ...state }));\n  const { token } = user;\n\n  const [branch, setBranch] = useState([]);\n  const [percentCOD, setPercentCOD] = useState([]);\n  const [shipping, setShipping] = useState(0);\n  const [COD, setCOD] = useState([]);\n  const [percentWarehouse, setPercentWarehouse] = useState(0);\n  const [showDividends, setShowDividends] = useState(false);\n  const [tracking, setTracking] = useState(false);\n  const [showResult, setShowResult] = useState(true);\n\n  const [dateStart, setDateStart] = useState(new Date());\n  const [dateEnd, setDateEnd] = useState(new Date());\n  const [search, setSearch] = useState({\n    date_start: new Date(),\n    date_end: new Date(),\n    branch_code: user.branch_code,\n  });\n\n  useEffect(() => {\n    LoadTotalDividends(search, token);\n    LoadPercentCOD(token);\n  }, [search]);\n\n  const LoadTotalDividends = (search, token) => {\n    getTotalDividendsABranch(search, token)\n      .then((res) => {\n        setBranch(res.data.branch[0]);\n        setCOD(res.data.COD);\n        setTracking(res.data.tracking);\n        setShipping(res.data.shipping_cost);\n        res.data.dividends_warehouse.length > 0 &&\n          setPercentWarehouse(\n            res.data.dividends_warehouse[0].parcel_join[0].total\n          );\n      })\n      .catch((err) => {\n        console.log(err);\n        Alert.error(err.response.data.error);\n      });\n  };\n\n  let result = {\n    totalBranch: \"-\",\n    totalWarehouse: \"-\",\n    totalAll: \"-\",\n  };\n\n  if (shipping) {\n    result = shippingCost(shipping, tracking, user.branch_code, branch);\n  }\n  const { totalBranch, totalWarehouse, totalAll } = result;\n\n  const LoadPercentCOD = (token) => {\n    getAllPercentage(token)\n      .then((res) => {\n        setPercentCOD(res.data);\n      })\n      .catch((err) => {\n        Alert.error(err.response.data.error);\n      });\n  };\n\n  // --------------- format date -----------------------\n  const handleDateStart = (date) => {\n    setDateStart(date);\n    setSearch({ ...search, date_start: dateFormat(date) });\n  };\n\n  const handleDateEnd = (date) => {\n    setDateEnd(date);\n    setSearch({ ...search, date_end: date });\n  };\n\n  const dateFormatAux = (date) => {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [year, month, day].join(\"-\");\n  };\n\n  const dateFormat = (date) => {\n    let formatYearMonthDay = dateFormatAux(date);\n    return formatYearMonthDay;\n  };\n\n  const percentBranch = () => {\n    let zum = 0;\n    if (checkBranch(branch)) {\n      zum =\n        branch.dividends_join[0].delivery + branch.dividends_join[0].receive;\n    }\n\n    return zum;\n  };\n\n  const calculateShippingCost = () => {\n    let zum = 0;\n    zum = (percentBranch() * shipping) / 100;\n\n    return zum;\n  };\n\n  const calculateWarehouse = () => {\n    let zum = 0;\n\n    if (checkBranch(branch)) {\n      zum = (branch.dividends_join[0].warehouse * percentWarehouse) / 100;\n    }\n\n    return zum;\n  };\n\n  const total = (warehouse) => {\n    let zum = 0;\n    zum = calculateWarehouse() + calculateShippingCost();\n\n    return zum;\n  };\n  const checkBranch = (branch) => {\n    if (branch.length !== 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"card card-body\">\n          <h3 className=\"text-danger mb-3\">ລາຍງານຜົນຕອບແທນ</h3>\n          <div className=\" row \">\n            <div className=\"col-auto\">\n              <DatePicker\n                selected={dateStart}\n                onChange={(date) => handleDateStart(date)}\n                showTimeSelect\n                dateFormat=\"dd/MM/yyyy HH:mm:ss\"\n                className=\"form-control\"\n                placeholderText=\"--/--/--\"\n                maxDate={new Date()}\n              />\n            </div>\n            <div className=\"col-auto\">\n              <DatePicker\n                selected={dateEnd}\n                onChange={(date) => handleDateEnd(date)}\n                showTimeSelect\n                dateFormat=\"dd/MM/yyyy HH:mm:ss\"\n                className=\"form-control\"\n                placeholderText=\"--/--/--\"\n                maxDate={new Date()}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card border-danger mt-3 \">\n          <div className=\"row m-2\">\n            <div className=\" col-12 mb-5\">\n              <div className=\"card\">\n                <div className=\"card-header border-0 bg-danger\">\n                  <h3 className=\"card-title text-white\">\n                    ປະເພດສາຂາ :{\" \"}\n                    {checkBranch(branch) && branch.dividends_join[0].name}\n                  </h3>\n                </div>\n                <div className=\"card-body\">\n                  <>\n                    <div className=\"d-flex justify-content-between align-items-center pb-3 border-bottom mb-3\">\n                      <p className=\"text-success text-xl\">\n                        <span className=\"text-muted\">ຜົນຕອບແທນ ຂາຮັບ</span>\n                      </p>\n                      <p className=\"d-flex flex-column text-right\">\n                        <span className=\"font-weight-bold\">\n                          {checkBranch(branch) &&\n                            branch.dividends_join[0].delivery + \"%\"}\n                        </span>\n                      </p>\n                    </div>\n                    {/* /.d-flex */}\n                    <div className=\"d-flex justify-content-between align-items-center pb-3 border-bottom mb-3\">\n                      <p className=\"text-warning text-xl\">\n                        <span className=\"text-muted\">ຜົນຕອບແທນ ຂາຈ່າຍ</span>\n                      </p>\n                      <p className=\"d-flex flex-column text-right\">\n                        <span className=\"font-weight-bold\">\n                          {checkBranch(branch) &&\n                            branch.dividends_join[0].receive + \"%\"}\n                        </span>\n                      </p>\n                    </div>\n                    <div className=\"d-flex justify-content-between align-items-center pb-3 border-bottom mb-3\">\n                      <p className=\"text-warning text-xl\">\n                        <span className=\"text-muted\">ຜົນຕອບແທນ ຄ່າຄັດແຍກ</span>\n                      </p>\n                      <p className=\"d-flex flex-column text-right\">\n                        <span className=\"font-weight-bold\">\n                          {checkBranch(branch) &&\n                            branch.dividends_join[0].warehouse + \"%\"}\n                        </span>\n                      </p>\n                    </div>\n                  </>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-12\">\n              <div className=\"card\">\n                <div className=\"card-header border-0 alert-warning\">\n                  <h3 className=\"card-title  text-danger\">ຜົນຕອບແທນ </h3>\n                </div>\n                <div className=\"card-body\">\n                  <>\n                    <div className=\"d-flex justify-content-between border-bottom mt-3 align-items-center mb-0\">\n                      <p className=\"d-flex flex-column text-xl\">\n                        <span className=\"text-muted\">ຮັບ-ຈ່າຍ ພັດສະດຸ</span>\n                      </p>\n                      <p className=\"d-flex flex-column text-right\">\n                        <span className=\"text-muted\">\n                          {typeof totalBranch === \"number\"\n                            ? totalBranch.toLocaleString() + \" ກີບ\"\n                            : totalBranch}\n                        </span>\n                      </p>\n                    </div>\n                    {/* /.d-flex */}\n                    <div className=\"d-flex justify-content-between border-bottom mt-3 align-items-center mb-0\">\n                      <p className=\"d-flex flex-column text-xl\">\n                        <span className=\"text-muted\">ຄ່າຄັດແຍກ</span>\n                      </p>\n                      <p className=\"d-flex flex-column text-right\">\n                        <span className=\"text-muted\">\n                          {typeof totalWarehouse === \"number\"\n                            ? totalWarehouse.toLocaleString() + \" ກີບ\"\n                            : totalWarehouse}\n                        </span>\n                      </p>\n                    </div>\n\n                    <div className=\"d-flex justify-content-between border-bottom mt-3 align-items-center mb-0\">\n                      <p className=\"d-flex flex-column text-xl\">\n                        <span className=\"text-muted\">ລວມ</span>\n                      </p>\n                      <p className=\"d-flex flex-column text-right\">\n                        <span className=\" text-muted\">\n                          <i className=\"ion ion-android-arrow-down  \" />\n                        </span>\n                        <span className=\"font-weight-bold text-danger text-end alert-warning py-2 ps-4 pe-1\">\n                          {typeof totalAll === \"number\"\n                            ? totalAll.toLocaleString() + \" ກີບ\"\n                            : totalAll}\n                        </span>\n                      </p>\n                    </div>\n                  </>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 col-12\">\n              <div className=\"card\">\n                <div className=\"card-header border-0 alert-warning\">\n                  <h3 className=\"card-title   text-danger\">COD </h3>\n                </div>\n                <div className=\"card-body\">\n                  {showResult && (\n                    <>\n                      <div className=\"d-flex justify-content-between border-bottom mt-3 align-items-center mb-0\">\n                        <p className=\"d-flex flex-column text-xl\">\n                          <span className=\"text-muted\">LAK</span>\n                        </p>\n                        <p className=\"d-flex flex-column text-right\">\n                          <span className=\"text-muted\">\n                            <i className=\"ion ion-android-arrow-down text-danger\" />\n                          </span>\n                          <span className=\"font-weight-bold text-end  text-danger alert-warning py-2 ps-4 pe-1\">\n                            {totalCOD(COD, percentCOD, \"lak\").toLocaleString()}\n                          </span>\n                        </p>\n                      </div>\n                      {/* /.d-flex */}\n                      <div className=\"d-flex justify-content-between border-bottom mt-3 align-items-center mb-0\">\n                        <p className=\"d-flex flex-column text-xl\">\n                          <span className=\"text-muted\">THB</span>\n                        </p>\n                        <p className=\"d-flex flex-column text-right\">\n                          <span className=\"text-muted\">\n                            <i className=\"ion ion-android-arrow-down text-danger\" />{\" \"}\n                          </span>\n                          <span className=\"font-weight-bold text-end  text-danger alert-warning py-2 ps-4 pe-1\">\n                            {totalCOD(COD, percentCOD, \"thb\").toLocaleString()}\n                          </span>\n                        </p>\n                      </div>\n\n                      <div className=\"d-flex justify-content-between border-bottom mt-3 align-items-center mb-0\">\n                        <p className=\"d-flex flex-column text-xl\">\n                          <span className=\"text-muted\"> USD</span>\n                        </p>\n                        <p className=\"d-flex flex-column text-right\">\n                          <span className=\" text-muted\">\n                            <i className=\"ion ion-android-arrow-down text-danger \" />\n                          </span>\n                          <span className=\"font-weight-bold text-end  text-danger alert-warning py-2 ps-4 pe-1\">\n                            {totalCOD(COD, percentCOD, \"usd\").toLocaleString()}\n                          </span>\n                        </p>\n                      </div>\n                    </>\n                  )}\n                  {/* /.d-flex */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dividends;\n"],"sourceRoot":""}